(define "CrosscutSites"
    (sites
        (results
            from:#1
            to:(sites Around (from) Diagonal
                if:(and
                    (is Mover (who at:(to)))
                    (= 2 
                        (count Pieces 
                            Next 
                            in:(intersection 
                                (sites Around (to) Orthogonal)
                                (sites Around (from) Orthogonal)
            )))))
            (to)
)))

(define "HasCrosscuts"
    (< 0 
        (count Sites
            in:("CrosscutSites" #1)
)))

(define "Place"
    (move Add 
        (to (sites Empty))
        (then 
            (if 
                (and
                    (not (is Prev Mover))
                    ("HasCrosscuts" (last To))
                )
                (set Var "LT" (last To) (then (moveAgain)))
                (set Var "LT" -1)   
))))

(define "Choose2Resolve"
    (forEach Site (sites Occupied by:Mover)
        (do (set Var "LT" (site)) 
            next:("ResolveTheValue" (var "LT"))
)))

(define "ResolveTheValue"
    (forEach Site
        (intersection 
            (sites Around #1 Orthogonal)
            (sites Around ("CrosscutSites" #1) Orthogonal)
        )
        (move 
            (from #1) 
            (to (site)
                if:(!= (last From) (to)) 
                (apply (remove (site)))
            )
            (then
                (and
                    (add 
                        (piece (id "Ball" Next))
                        (to (var "LT"))
                    )    
                    (set Var "LT" (last To) 
                        (then
                            (if 
                                ("HasCrosscuts" (var "LT"))
                                (set NextPlayer (player (mover)))
                                (set Var "LT" -1)
                    )))
                    
)))))

//-----------------------------------------------
// Main routine

(game "Resolve"
    (players 2)
    (equipment
        {
        "SquareGrid"
        (regions P1 { (sites Side N) (sites Side S) } ) 
        (regions P2 { (sites Side W) (sites Side E) } )
        (piece "Ball" P1)
        (piece "Ball" P2)
        }
    )
    (rules
        (play
            (if
                (not (is Prev Mover))
                (or
                    ("Place")
                    ("Choose2Resolve")
                )
                (if 
                    (<= 0 (var "LT"))
                    ("ResolveTheValue" (var "LT"))
                    ("Place")
        ))) 
        (end 
            {
            (if 
                (is Connected Orthogonal Mover) 
                (result Mover Win)
            )
            }
)))

//-------------------------------------------------
// Defines for Options

(define "SquareGrid" (board (square <BoardSize:smallSide>) use:Vertex))

//-----------------------------------------
// Options

(option "Board Size" <BoardSize> args:{<smallSide>} 
    {
    (item "Order 5" <5> "Order 5 board")
    (item "Order 9" <9> "Order 9 board")*
    (item "Order 13" <13> "Order 13 board")
    (item "Order 19" <19> "Order 19 board")
    }
)

//---------------------------------------------

(define "ColourBackground" (colour LightTan)) 
(define "Invisible" (colour 0 0 0 0))

(metadata
    (info
        {
        }
    )
    (graphics
        {
        (board Style Go)
        }
    )
)
