(define "Plant"
    (move Add
        (to 
            (sites Empty)
            if:(= 0
                (count Sites
                    in:(sites Around (to) Own Orthogonal)
                )
            )
        )
        (then ("UpdateScore"))
    )
)

(define "PlaceGrey"
    (do
        (move Add
            (piece "Marker0")
            (to
                (sites Empty)
                if:(< 0
                    (count Sites
                        in:(sites Around (to) Own Orthogonal)
                    )
                )
            )
        )
        ifAfterwards:(all Groups Orthogonal of:(is Mover (who at:(to)))
            if:(> 2
                (count Sites
                    in:(intersection
                        (sites Around (sites) NotEmpty Orthogonal)
                        (sites Occupied by:Neutral)
                    )
                )
            )
        )
        #1
    )
)

(define "ReplaceAllGrey"
    (add 
        (to 
            (sites Occupied by:Neutral)
            (apply (remove (to)))
        )
        (then 
            (if 
                (!= 1 (var "HasGrown"))
                (and
                    (set Var "HasGrown" 1)
                    (if 
                        (= (id P2) (mover))
                        (and
                            (set Var "MoveThatMustBePlant" (count Moves))
                            (moveAgain)
                        )
                    )
                )
            )
        )
    )
)

(define "Grow"
    ("PlaceGrey"
        (then 
            (if
                (can Move ("PlaceGrey" ~))
                (moveAgain)
                (do
                    ("ReplaceAllGrey")
                    next:("UpdateScore")
                )
            )
        )
    )
)

(define "UpdateScore"
    (set Score Mover
        (-
            (count Sites in:(sites Occupied by:Mover))
            (* <P>
                (count Groups Orthogonal if:(is Mover (who at:(to))))
            )
        )
    )
)

//-------------------------------------------------------------------------

(game "Symple"
    (players 2)
    (equipment
        {
        (board (square <Size>) use:Vertex)
        (piece "Marker" Each)
        (piece "Marker" Neutral)
        }
    )
    (rules
        (play
            (if
                (= (count Moves) (var "MoveThatMustBePlant"))
                ("Plant")
                (if
                    (= 0 (count MovesThisTurn))
                    (or
                        ("Plant")
                        ("Grow")
                    )
                    ("Grow")
                )
            )
        )
        (end 
            (if 
                (is Full) 
                (byScore)
            )
        )
    )
)

//-------------------------------------------------------------------------

(option "Board Size" <Size> args:{ <size> }
    {
    (item "7"    <7>  "A size 7 board is currently selected")
    (item "9"    <9>  "A size 9 board is currently selected")
    (item "11"    <11>  "A size 11 board is currently selected")
    (item "13"    <13>  "A size 13 board is currently selected")
    (item "15"    <15>  "A size 15 board is currently selected")
    (item "17"    <17>  "A size 17 board is currently selected")
    (item "19"    <19>  "A size 19 board is currently selected")*
    }
)

(option "Group Penalty" <P> args:{ <p> }
    {
    (item "0"    <0>  "A group penalty of 0 points is currently selected")
    (item "2"    <2>  "A group penalty of 2 points is currently selected")
    (item "4"    <4>  "A group penalty of 4 points is currently selected")
    (item "6"    <6>  "A group penalty of 6 points is currently selected")
    (item "8"    <8>  "A group penalty of 8 points is currently selected")
    (item "10"    <10>  "A group penalty of 10 points is currently selected")*
    (item "12"    <12>  "A group penalty of 12 points is currently selected")
    }
)

//-------------------------------------------------------------------------

(metadata
    (info {
        
    })
    
    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour Black))
        (player Colour Neutral (colour Grey))
        (board Colour InnerEdges (colour 178 151 100))
        (board Colour OuterEdges (colour 178 151 100))
        (board Colour Phase0 (colour 250 210 148))
        (board Colour Phase1 (colour 250 210 148))
        (board Style Board)
    })
)
