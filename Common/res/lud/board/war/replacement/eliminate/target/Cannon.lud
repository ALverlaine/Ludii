//-------------------------------------------------------------------------
// Single pawn moves.
//-------------------------------------------------------------------------

(define "StepToEmptyForwards"
    (move Step
        (directions Forwards of:All)
        (to if:(is Empty (to)))
    )	
)

(define "StepCapture"
    (move Step
        (directions {Forwards Rightward Leftward} of:All)
        (to 
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

(define "EnemyAround"
    (not
        (all Sites
            (sites Around (from) All)
            if:(not (is Enemy (who at:(site))))
        )		
    )
)

(define "RetreatMove"
    (if ("EnemyAround")
        (move Hop 
            (directions Backwards of:All)
            (between 
                if:(is Empty (between))
            )
            (to if:(is Empty (to)))
        )
    )	
)

//-------------------------------------------------------------------------
// Cannon moves.
//-------------------------------------------------------------------------

(define "CannonMove"
    (move Hop
        All
        (between 
            (exact 2)
            if:(= (id "Pawn" Mover) (what at:(between)))
        )
        (to 
            if:(is Empty (to))
        )
    )	
)

(define "AheadSite" (ahead (from) #1 (directions Vertex from:(from) to:(to))))

(define "IsCannon"
    (and
        (= (id "Pawn" Mover) (what at:(to)))
        (= (id "Pawn" Mover) (what at:("AheadSite" steps:2)))	
    )
)

(define "CannonShoot"
    (forEach Direction 
        All 
        (if 
            (and {
                ("IsCannon")
                (is Empty ("AheadSite" steps:3))
            })
            (if 
                (is Enemy (who at:("AheadSite" steps:4)))
                (move Remove ("AheadSite" steps:4))
                (if (and
                        (is Empty ("AheadSite" steps:4))
                        (is Enemy (who at:("AheadSite" steps:5)))
                    )
                    (move Remove ("AheadSite" steps:5))
                )
            )
            
        )
    )
)

//-------------------------------------------------------------------------

(game "Cannon"  
    (players {(player N) (player S)})  
    (equipment { 
        (board (square 10) use:Vertex) 
        (piece "Pawn" Each
            (or {
                ("StepToEmptyForwards")
                ("StepCapture")
                ("RetreatMove")
                ("CannonMove")
                ("CannonShoot")
            })
        )
        (piece "Town" Each)
        (hand Each)
        (regions "Home" P1 (sites Bottom) )
        (regions "Home" P2 (sites Top) )
    })
    
    (rules 
        (start {
            (place "Town" "Hand")
            (place "Pawn1" (forEach (difference (expand (sites Row 2)) (sites Right)) if:(is Even (column of:(site)))))
            (place "Pawn2" (forEach (difference (expand (sites Row 7)) (sites Left)) if:(is Odd (column of:(site)))))
        })
        
        phases:{
        (phase "Placing"
            (play
                (move
                    (from (handSite Mover))
                    (to (difference (sites Mover "Home") (sites Corners)))
                )
            )
            (nextPhase Mover "Moving")
        )
        
        (phase "Moving" 
            (play (forEach Piece))
            (end  
                (if (or 
                        (= Off (where "Town" Next)) 
                        (no Moves Next)
                    ) 
                    (result Mover Win)
                )
            )
        )
        }
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {        
        }
    )
    
    (graphics {
        (board Style Board)
        (board Colour Phase0 (colour 255 230 150))
        (board Colour InnerEdges (colour 160 140 100))
        (board Colour OuterEdges (colour 0 0 0))
        (player Colour P1 (colour White))
        (player Colour P2 (colour Red))
    })
    
)
