(define "DistanceToNearestIceberg"
    (count Steps
        ("OntoEmptyOrIceberg")
        (from)
        (sites Occupied by:Neutral)
    )
)

(define "NearestIcebergs"
    (intersection
        (sites Occupied by:Neutral)
        (sites Distance
            ("OntoEmptyOrIceberg")
            from:(from)
            (exact ("DistanceToNearestIceberg"))
        )
    )
)

(define "OntoEmptyOrIceberg"
    (step 
        (to 
            if:(or
                (= (id Neutral) (who at:(to)))
                (is Empty (to))
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Icebreaker"
    (players 2)
    (equipment
        {
        (board (hex <Board>))
        (piece "Disc" Each
            (move Step
                (to 
                    if:(and
                        (or
                            (= (id Neutral) (who at:(to)))
                            (is Empty (to))
                        )
                        (= 1
                            (-
                                (count Steps
                                    ("OntoEmptyOrIceberg")
                                    (from)
                                    ("NearestIcebergs")
                                )
                                (count Steps
                                    ("OntoEmptyOrIceberg")
                                    (to)
                                    ("NearestIcebergs")
                                )
                            )
                        )
                    )
                    (apply 
                        (if
                            (is Occupied (to))
                            (and
                                (remove (to))
                                (addScore Mover 1)
                            )
                        )
                    )
                )
            )
        )
        (piece "Disc" Neutral)
        }
    )
    (rules
        (start {
            (place "Disc0" (difference (sites Board) (sites Corners)))
            
            (place "Disc1" (sites Around (centrePoint) distance:(- <Board> 1) NNW))
            (place "Disc1" (sites Around (centrePoint) distance:(- <Board> 1) E))
            (place "Disc1" (sites Around (centrePoint) distance:(- <Board> 1) SSW))
            
            (place "Disc2" (sites Around (centrePoint) distance:(- <Board> 1) NNE))
            (place "Disc2" (sites Around (centrePoint) distance:(- <Board> 1) W))
            (place "Disc2" (sites Around (centrePoint) distance:(- <Board> 1) SSE))
            
        })
        (play
            (forEach Piece Mover)
        )
        (end 
            (if 
                (or
                    (<
                        (/ (- (count Sites in:(sites Board)) 6) 2)
                        (score P1)
                    )
                    (<
                        (/ (- (count Sites in:(sites Board)) 6) 2)
                        (score P2)
                    )
                )
                (byScore)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Board Size" <Board> args:{ <size> }
    {
    (item "8"    <8>  "A size 8 board is currently selected")
    (item "7"    <7>  "A size 7 board is currently selected")
    (item "6"    <6>  "A size 6 board is currently selected")
    (item "5"    <5>  "A size 5 board is currently selected")*
    (item "4"    <4>  "A size 4 board is currently selected")
    }
)

//------------------------------------------------------------------------------

(metadata 
    (info {
        
    })
    
    (graphics {
        (player Colour Neutral (colour White))
        (player Colour P1 (colour Red))
        (player Colour P2 (colour Black))
    })
)
