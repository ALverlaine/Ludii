(define "PromoteIfCornersReached"  
    (if (is In (last To) (sites Next))
        (move Promote (last To) (piece "DiscDouble") Mover)
    )
)

(define "HopDisc" 
    (move
        Hop 
        (directions {Rightward Leftward Forwards} of:All)
        (between 
            if:(is Enemy (who at:(between)))
            (apply (remove (between)))
        ) 
        (to if:(is Empty (to))) 
        (then
            (and 
                ("PromoteIfCornersReached")
                ("HasCaptured")
            )
        )
    ) 
)

(define "HopDiscDouble" 
    (move
        Hop
        All
        (between 
            before:9
            after:9
            if:(is Enemy (who at:(between))) 
            (apply (remove (between)))
        )
        (to if:(is Empty (to)))
        (then ("HasCaptured"))
    )
)

(define "HasCaptured"  (set Value Mover 0))
(define "HasNotCaptured" (set Value Mover 1))
(define "DidNotCaptured"  (= (value Player Prev) 1) )
(define "RememberSiteWithPossibleCapture"  
    (set Pending 
        (sites From
            (or 
                (forEach Piece "Disc" 
                    ("HopDisc")
                ) 
                (forEach Piece "DiscDouble" 
                    (move
                        Hop
                        All
                        (between 
                            before:9
                            after:9
                            if:(is Enemy (who at:(between))) 
                            (apply (remove (between)))
                        )
                        (to if:(is Empty (to)))
                    )
                )
            )
        )
    )
)

(define "SitesWithPossibleCaptureInPreviousTurn" (sites Pending))

(define "HuffOnePieceOf" 
    (move
        Select 
        (from #1
            if:(!= (what at:(from)) 0)
        )
        (then 
            (and  {
                (remove (last To)) 
                (moveAgain) 
                (set Value Prev 0)
            })
        )
    )
)

(define "ShouldCapturedButMoved" 
    (and 
        (is In (last From) ("SitesWithPossibleCaptureInPreviousTurn"))  
        (is In (last From) (sites Empty))
    )
)

//------------------------------------------------------------------------------

(game "La Dama" 
    (players {(player N) (player S)})  
    (equipment { 
        (board (square 5) use:Vertex)
        (piece "Disc" Each
            (or
                ("HopDisc") 
                (move
                    Step 
                    (directions {Rightward Leftward Forwards} of:All) 
                    (to if:(is Empty (to)))
                    (then ("HasNotCaptured"))
                )
                (then ("PromoteIfCornersReached"))
            )		
        )
        (piece "DiscDouble" Each
            (or
                ("HopDiscDouble") 
                (move Slide All (then ("HasNotCaptured")))
            )		
        )
        (regions P1 (intersection (sites Corners) (sites Bottom)))
        (regions P2 (intersection (sites Corners) (sites Top)))
    })  
    
    (rules 
        (start { 
            (place "Disc1" (union { (expand (sites Bottom)) (sites {"D3" "E3"}) } ) )
            (place "Disc2" (union { (sites {"A3" "B3"}) (expand (sites Top)) } ) )
        })
        
        (play 
            (or
                (if ("DidNotCaptured")
                    (or
                        (if ("ShouldCapturedButMoved") 
                            ("HuffOnePieceOf" (last To))
                        )
                        ("HuffOnePieceOf" ("SitesWithPossibleCaptureInPreviousTurn"))
                    )
                )
                (do 
                    ("RememberSiteWithPossibleCapture") 
                    next:(forEach Piece)
                )
            )
        ) 
        
        (end (if (no Pieces Mover) (result Next Win))) 
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        }
    )
    
    (graphics {
        (show Edges Hidden)
    })
    
)
