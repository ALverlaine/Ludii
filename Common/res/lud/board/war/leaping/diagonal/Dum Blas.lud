(define "HopCounter" 
	    (move
	        Hop 
	        (from #1) 
	        Diagonal 
	        (between 
	            if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))
	            (apply (remove (between) at:EndOfTurn))
	        ) 
	        (to if:(is Empty (to))) 
	        #2
	    ) 
	)

	(define "IsUnpromoted" (= (what at:(last To)) (id "Counter" Mover)))

	(define "JumpToPromotionZone" (is In (last To) (sites Next)) )

	//------------------------------------------------------------------------------

	(game "Dum Blas" 
	    (players 2)  
	    (equipment { 
	        (board (square 10)) 
	        (piece "Counter" P1 N)
	        (piece "Counter" P2 S) 
	        (piece "DoubleCounter" Each)
	        (regions P1 (sites Bottom))
	        (regions P2 (sites Top))
	    })  
	    
	    (rules 
	        (start { 
	            (place "Counter1" (difference (expand (sites Bottom) steps:3) (sites Phase 1)))
	            (place "Counter2" (difference (expand (sites Top) steps:3) (sites Phase 1)))
	        })
	        
	        (play 
	            (if "SameTurn"
	                (if "IsUnpromoted"
	                    (max Moves
	                        ("HopCounter" (last To)
	                            (then 
	                                (if (can Move ("HopCounter" (last To))) 
	                                    (moveAgain)
	                                    (if "JumpToPromotionZone" 
	                                        (move Promote (last To) (piece "DoubleCounter") Mover)
	                                    )
	                                ) 
	                            ) 
	                        )
	                    )
	                    (max Moves ("HopDiagonalSequenceCaptureAgain" before:(count Rows) after:(count Rows) at:EndOfTurn) )
	                )
	                (priority {
	                    (max Moves
	                        (or 
	                            (forEach Piece "Counter"
	                                ("HopCounter" (from) 
	                                    (then 
	                                        (if (can Move ("HopCounter" (last To))) 
	                                            (moveAgain) 
	                                            (if "JumpToPromotionZone" 
	                                                (move Promote (last To) (piece "DoubleCounter") Mover)
	                                            )
	                                        ) 
	                                    ) 
	                                ) 
	                            )
	                            (forEach Piece "DoubleCounter" ("HopDiagonalSequenceCapture" before:(count Rows) after:(count Rows) at:EndOfTurn))
	                        )
	                    )
	                    (or  
	                        (forEach Piece "Counter" 
	                            (move
	                                Step 
	                                (directions {FR FL}) 
	                                (to if:(is Empty (to)))
	                            )
	                            (then 
	                                (if "JumpToPromotionZone"
	                                    (move Promote (last To) (piece "DoubleCounter") Mover)
	                                )
	                            )
	                        )
	                        (forEach Piece "DoubleCounter" (move Slide Diagonal))
	                    )
	                })
	            )
	        ) 
	        
	        (end (if (no Moves Next) (result Mover Win))) 
	    )
	)
	

	//------------------------------------------------------------------------------

	(metadata 
	    
	    (info
	        {
	        }
	    )
	    
	    (graphics {
	        (board Style Chess)
	        (piece Families {"Defined" "Isometric"})
	        (board Colour Phase0 (colour Red))
	        (board Colour Phase1 (colour LightGrey))
	    })
	    
	)
