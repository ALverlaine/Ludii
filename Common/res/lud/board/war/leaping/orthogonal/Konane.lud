(define "HopSequence" ("HopCapture" (from #1) #2 (then ("ReplayIfCanMove" ("HopCapture" (from (last To)) SameDirection)))))

//------------------------------------------------------------------------------

(game "Konane" 
    (players 2) 
    (equipment { 
        <Board>
        (piece "Marker" Each)
    }) 
    (rules 
        (start { 
            (place "Marker1" (sites Phase 1))
            (place "Marker2" (sites Phase 0))
        })
        
        phases:{ 
        (phase "OpeningP1" P1 
            (play 
                (move Remove
                    (intersection 
                        (union 
                            (sites Corners) 
                            (sites Centre)
                        ) 
                        (sites Phase 1)
                    ) 
                )
            ) 
            (nextPhase Mover "Movement")
        )
        (phase "OpeningP2" P2 
            (play (move Remove (sites Around (last To) Own))) 
            (nextPhase Mover "Movement")
        )
        (phase "Movement" 
            (play 
                (if "SameTurn"
                    (or
                        ("HopSequence" (last To) SameDirection)
                        (move Pass)
                    )
                    (forEach Piece "Marker" ("HopSequence" (from) Orthogonal)) 
                )
            )
        )
        }
        
        (end ("NoMoves" Loss))
    )
)

//------------------------------------------------------------------------------

(option "Board Size" <Board> args:{ <size> }
    {
    (item "6x6" <(board (square 6))>   "The game is played on a 6x6 board.") 
    (item "8x8" <(board (square 8))>   "The game is played on a 8x8 board.") 
    (item "10x10" <(board (square 10))>  "The game is played on a 10x10 board.")* 
    (item "12x12" <(board (square 12))>  "The game is played on a 12x12 board.") 
    (item "14x14" <(board (square 14))>  "The game is played on a 14x14 board.") 
    (item "16x16" <(board (square 16))>  "The game is played on a 16x16 board.") 
})

//------------------------------------------------------------------------------

(rulesets { 
    
    (ruleset "Ruleset/8x8 Konane (Suggested)" {
        "Board Size/8x8"
    })
    
    (ruleset "Ruleset/10x10 Konane (Observed)" {
        "Board Size/10x10"
    })*
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        }
    )
    
    (graphics {
        (player Colour P1 (colour Black))
        (player Colour P2 (colour White))
        (board Colour Phase0 (colour 223 178 110))
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
    })
    
    (ai 
        "Konane_ai"
    )
    
)
