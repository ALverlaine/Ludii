(define "CaptureToPiece"
    (apply 
        (remove 
            (to) 
        )
    ) 
)

(define "CaptureForwardDiagonal"
    (move
        Step 
        (directions {FR FL}) 
        (to 
            if:(is Enemy (who at:(to))) 
            (apply (remove (to)))
        )
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King_noCross" Next)))) )
)

(define "HasNeverMoved"
    (= (state at:#1) 1) 
)

(define "PieceHasMoved"
    (set State at:#1 0) 
)

(define "RememberPieceHasMoved"
    (then 
        (if 
            (= (state at:(last To)) 1) 
            ("PieceHasMoved" (last To))
        ) 
    ) 
)

(define "SetEnPassantLocation"
	    (then 
	        (set Pending (ahead (last To) Backward))
	    )
	)

(define "DoubleStep"
    (move
        Slide 
        Forward 
        (between (exact 2) if:(is Empty (between))) 
        (to if:(is Empty (to))) 
        "SetEnPassantLocation"
    )
)

(define "InLocationEnPassant"
	    (and 
	        (is Pending) 
	        (= (to) (value Pending)) 
	    )
	)

(define "EnPassant"
	    (move
	        Step 
	        (directions {FR FL}) 
	        (to 
	        	if:(and 
	        			("InLocationEnPassant")
	        			(= (id "Pawn" Next) (what at:(ahead (from) Forward)))
	        		)
	        ) 
	        (then 
	            (remove 
	                (ahead (last To) Backward)
	            )
	        )
	    )
	)

//------------------------------------------------------------------------------

(game "Main Chator (Selangor)"
    (players {(player N) (player S)})  
    (equipment { 
        (board (square 8)) 
        
        (piece "Pawn" Each 
            (or {
                (if (is In (from) (sites Start (piece (what at:(from)))))
                    "DoubleStep"
                )
                "StepForwardToEmpty" 
                "CaptureForwardDiagonal"
                "EnPassant"
        	    (move
        		        Step 
        		        (directions {FR FL}) 
        		        (to 
        		        	if:(and
        		        			("InLocationEnPassant")
        		        			(= (id "Pawn" Next) (what at:(ahead (from) Forward)))
        		        		)
        		        ) 
        		        (then 
        		            (remove 
        		                (ahead (last From) (if (is Mover P1) N S))
        		            )
        		        )
        		    )
                }
                (then
                    (if (is In (last To) (sites Mover "Promotion")) 
                        (moveAgain)
                    )
                )
            )
        )
        (piece "Rook" Each 
            (move
                Slide 
                Orthogonal 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPiece"
                ) 
            )
        )
        (piece "King_noCross" Each 
        		(if (= (count Pieces Mover) 1)
        			(or
        					(move
        			                Leap 
        			                "KnightWalk" 
        			                (to 
        			                    if:(not (is Friend (who at:(to)))) 
        			                    "CaptureToPiece"
        			                ) 
        			            )	
        					(move
        			                Slide 
        			                (to 
        			                    if:(is Enemy (who at:(to))) 
        			                    "CaptureToPiece"
        			                ) 
        			            )
        			)
	                (or {
	                        (move
	                            Step 
	                            (to 
	                                if:(not (is Friend (who at:(to)))) 
	                                "CaptureToPiece" 
	                            )
	                        )
	                        (if (and ("HasNeverMoved" (from)) (!= (value Player Mover) (mover)))
	                            (move
	                                Leap 
	                                "KnightWalk" 
	                                (to 
	                                    if:(is Empty (to))
	                                )
	                                (then (set Value Mover (mover)))
	                            )
	                        )
	                        (if ("HasNeverMoved" (from))
	                            (move
	                                Hop 
	                                (directions {E W})
	                                (between if:True)
	                                (to 
	                                    if:(is Empty (to))
	                                )
	                            )
	                        )
	                }
	                "RememberPieceHasMoved"
	                )
                )
        )
        (piece "Elephant" Each 
            (move
                Slide 
                Diagonal 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPiece"
                ) 
            )		
        ) 
        (piece "Knight" Each 
            (move
                Leap 
                "KnightWalk" 
                (to 
                    if:(not (is Friend (who at:(to)))) 
                    "CaptureToPiece"
                ) 
            )
        )
        (piece "Ferz_noCross" Each 
            (move
                Slide 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPiece"
                ) 
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
    })
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "King_noCross1" coord:"D1" state:1) (place "Ferz_noCross1" coord:"E1") 
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "King_noCross2" coord:"E8" state:1) (place "Ferz_noCross2" coord:"D8") 
        })
        
        (play 
            (if "SameTurn"
                (move Promote (last To) (piece "Ferz_noCross") Mover)
                (do 
                	(forEach Piece) 
                	ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
                        (then
                                (if (!= (next) (value Player Next))
                                    (if ("IsInCheck" "King_noCross" Next)
                                        (set Value Next (next))
                                    )
                                )
                            )		
                )
            )
        )
        
        (end {
            (if (and 
                    ("IsInCheck" "King_noCross" Next)
                    ("NextCanNotMove")
                ) 
                (result Mover Win)
            ) 
            (if (no Moves Mover) (result Mover Win)) 
            (if (= (count Pieces Next) 1) (result Mover Win) ) 
        })
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Main Chator is a replacement captur game played in Malaysia and Indonesia. This version was played in the Selangor region of Malaysia. ")
        (rules "8x8 board. When a player is reduced to only their king, the king may move like any other piece.")
        (source "DLP evidence.")
        (version "1.2.11")
        (classification "board/war/replacement/checkmate/chaturanga/reconstruction")
        (credit "Eric Piette")
        }
    )
    
    (graphics {
        (board Colour Phase0 (colour 223 178 110))
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
    })
    
)
