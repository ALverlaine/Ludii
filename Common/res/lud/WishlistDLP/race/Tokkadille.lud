(define "NextSiteFrom" 
    (trackSite Move 
        from:#1 
        #2
        steps:#3
    )
)

(define "DieNotUsed" (!= (pips) 0))

(define "HuckeSite" (mapEntry "Hucke" (mover)))

(define "Die1" (face 26))
(define "Die2" (face 27))

(define "CanMove2PiecesToHucke" 
    (if (= ("Die1") ("Die2"))
        (<= 2 (count Pieces Mover in:(sites { ("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die2")) })))
        (and
            (<= 1 (count Pieces Mover in:(sites { ("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die1")) })))
            (<= 1 (count Pieces Mover in:(sites { ("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die2")) })))	
        )
    )
)

(define "CanMove2PiecesFromHucke" 
    (if (and (and (!= ("Die1") 1) (!= ("Die2") 1)) (<= 2 (count Pieces Mover in:(sites {  ("HuckeSite") }))))
        (if (= ("Die1") ("Die2"))
            (not (is Enemy (who at:("NextSiteFrom" ("HuckeSite") "Track" ("Die2")))))
            (and 
                (not (is Enemy (who at:("NextSiteFrom" ("HuckeSite") "Track" ("Die1")))))
                (not (is Enemy (who at:("NextSiteFrom" ("HuckeSite") "Track" ("Die2")))))
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Tokkadille"
    (players 2)
    (equipment {
        (board (rectangle 2 13) 
            {
            (track "Track1" {12..7 5..0 13..18 20..25} P1 directed:True)
            (track "Track2" {25..20 18..13 0..5 7..12} P2 directed:True)
            (track "ReverseHuckeTrack1" {0..5 7} P1 directed:True)
            (track "ReverseHuckeTrack2" {13..18 20} P2 directed:True)
            } 
            use:Vertex
        ) 
        (dice d:6 num:2)
        (piece "Disc" Each
            (if (is In (from) (sites Mover "BeforeHucke"))
                (forEach Die 
                    if:("DieNotUsed")
                    (move 
                        (from (from))
                        (to 
                            ("NextSiteFrom" (from) "Track" (pips))
                            if:(and 
                                (is In (to) (sites Mover "BeforeHucke")) 
                                (not (is Enemy (who at:(to))))
                            )
                        )
                    )
                    (then 
                        (if (not (all DiceUsed))
                            (moveAgain)
                        )
                    )
                )
            )
        ) 
        (regions "BeforeHucke" P1 (sites {12..7 5..1}))
        (regions "BeforeHucke" P2 (sites {25..20 18..14}))
        (map "Hucke" {(pair P1 0) (pair P2 13)})
    })
    (rules 
        (start {
            (place Stack "Disc1" 12 count:<Pieces:num>) 
            (place Stack "Disc2" 25 count:<Pieces:num>) 
        })
        (play 
            (do (if (not "SameTurn") (roll))
                next:(or { 
                    (if (and (>= 0 (var "MovingFromHucke")) (>= 0 (var "MovingToHucke"))) (forEach Piece))
                    
                    (if (>= 0 (var "MovingFromHucke"))
                        (if (or (< 0 (var "MovingToHucke")) ("CanMove2PiecesToHucke"))
                            (or 
                                (if (and (!= 26 (var "MovingToHucke")) (is Friend (who at:("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die1")))))
                                    (move 
                                        (from ("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die1")))
                                        (to ("HuckeSite"))
                                        (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingToHucke" 26)) (set Var "MovingToHucke" 0)))
                                    )
                                )
                                (if (and (!= 27 (var "MovingToHucke")) (is Friend (who at:("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die2")))))
                                    (move 
                                        (from ("NextSiteFrom" ("HuckeSite") "ReverseHuckeTrack" ("Die2")))
                                        (to ("HuckeSite"))
                                        (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingToHucke" 27)) (set Var "MovingToHucke" 0)))
                                    )
                                )
                            )
                        )
                    )
                    
                    (if (>= 0 (var "MovingToHucke"))
                        (if (or (< 0 (var "MovingFromHucke")) ("CanMove2PiecesFromHucke"))
                            (or 
                                (if (and (!= 26 (var "MovingFromHucke")) (not (is Enemy (who at:("NextSiteFrom" ("HuckeSite") "Track" ("Die1"))))))
                                    (move 
                                        (from ("HuckeSite"))
                                        (to ("NextSiteFrom" ("HuckeSite") "Track" ("Die1")))
                                        (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingFromHucke" 26)) (set Var "MovingFromHucke" 0)))
                                    )
                                )
                                (if (and (!= 27 (var "MovingFromHucke")) (not (is Enemy (who at:("NextSiteFrom" ("HuckeSite") "Track" ("Die2"))))))
                                    (move 
                                        (from ("HuckeSite"))
                                        (to ("NextSiteFrom" ("HuckeSite") "Track" ("Die2")))
                                        (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingFromHucke" 27)) (set Var "MovingFromHucke" 0)))
                                    )
                                )
                            )
                        )
                    )
                })
            )
        )
        (end (if (<= 12 (score Mover)) (result Mover Win)))
    )
)

//------------------------------------------------------------------------------

(option "Start Rules" <Pieces> args:{ <num> }
    {
    (item "15"  <15>  "Each player has 15 pieces.")   
    (item "16"  <16>  "Each player has 16 pieces.")   
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Tokkadille is a race game similar to other European Tables games, which I known from nineteenth century Germany, but which may be older.")
        (rules "2x12 board, with spaces as points, divided in two. Fifteen or sixteen pieces per player, which begin on one of the points, the furthest to the right of one player and the furthest to the left of the other (they will be opposite each other. The points form a continuous track in a horseshoe shape; each player progresses in opposite directions (one from their bottom right to the top right, the other from their bottom left to their top left.Play begins by each player rolling one die; the player with the highest roll plays first and plays the numbers on this first roll. Players move according to the number on each die by moving one piece the value on one die then another piece the value on the other die, or by moving one piece the value of one die and then the value of the other. Doubles are only played once. Pieces may not land on a space occupied by an opponent's piece. Pieces may only move into the twelfth point on their side of the board (Hucke) with a throw that allows two pieces to move there at once. A player cannot move into or hit pieces in the opponent's Hucke, but if the player already has taken their own Hucke and their throw that would bring pieces to the opponent's Hucke, they may move these pieces to the players' Hucke. Players may move beyond their Hucke only on a throw that allows them, to move two pieces from the Hucke onto the opposite side of the board. Each player has another piece, placed at the tip of their point. The player moves this piece to mark the score they earn. Points are awarded as follows: When it is possible for a player to land on a space occupied by a single piece belonging to the opponent (a hit), a player gains one point. Hitting the opponent's Hucke is only possible by throwing two 1s with at least four pieces on the player's own Hucke. For a given throw, all possible hits made by any legal move are counted. Players move their pieces after the possible hits are calculated. If a player has two or more pieces on each of their sixth through twelfth points, they score two points, at the end of every turn for which this is true. If a player can hold this position, but chooses not to, they are penalized two points. A player gains two points by bringing all of their pieces into the final section of the board and bearing all of their pieces off by throwing more than the number of remaining spaces. Any points which a player forgets to add are taken by the opponent, but the opponent must claim these before their throw. The player who obtains twelve points wins. A win counts as double if the opponent has scored fewer than six points, triple if the opponent's score is two or one, and quadruple if the opponent has not scored.")
                (source "Alvensleben 1853: 582-585.")
                (version "1.2.1")
                (classification "race/WishlistDLP")
                (credit "Eric Piette")
                (origin  "This game was played in Germany, around 1853.")
                }
            )
            
            (graphics {
                (board Style backgammon)
                (stackType Backgammon)
            })
            
        )
        
