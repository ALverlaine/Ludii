(define "ExternalSite" 86)
(define "KillingSite" 84)
(define "Central" 0)
(define "EndTrack" 5)
(define "BeginningExtensionTrack" 4)

(define "ThrowValue" (mapEntry "Throw" (count Pips)))

(define "Throw1" (= ("ThrowValue") 1))

(define "SiteToMoveOnTrack" (trackSite Move #1 steps:#2))
(define "BankorOnTrack" (trackSite Move from:("WhereBankor") #1 steps:#2))

(define "IsSpecialThrow" (is In ("ThrowValue") (sites {1 6 4})))

(define "BankorPhaseDone" (and (= 1 (size Stack at:("WhereBankor"))) (= ("EndTrack") ("WhereBankor"))))

(define "WhereBankor" (where "Bankor" Neutral))

//(define "MoveGhoula"
//    (if (= 1 (size Stack at:("WhereGhoula")))
//        (move
//            (from ("WhereGhoula") level:(where Level "Ghoula" Neutral at:("WhereGhoula")))
//            (to ("GhoulaOnTrack" "Track" 1))
//        )
//        (move
//            (from ("WhereGhoula") level:(where Level "Ghoula" Neutral at:("WhereGhoula")))
//            (to ("GhoulaOnTrack" "ReverseGhoulaTrack" 1))
//            (then
//                (if (= (last From) ("KillingSite"))
//                    (forEach Level (last From) FromTop
//                        (remove (last From) level:(level))
//                    )
//                    (forEach Level (last From) FromTop
//                        (fromTo
//                            (from (last From) level:(level))
//                            (to (last To))
//                        )
//                    )
//                )
//            )
//        )
//        (then
//            (if ("BankorPhaseDone") 
//                (set Var 0)
//                (and
//                    (if (> (var) 1) (moveAgain))
//                    (set Var (- (var) 1))
//                )
//            )
//        )
//    )
//)

//------------------------------------------------------------------------------

(game "Sik"
    (players <Player:number>)
    (equipment {
        (board 
            (spiral turns:5 sites:86) 
            {
            (track "Track" {85..0} directed:True)
            }
            use:Vertex
        )
        (dice d:2 from:0 num:4)
        (map "Throw" {(pair 0 4) (pair 1 3) (pair 2 0) (pair 3 1) (pair 4 6)})
        (piece "Stick" Each
            (if (= (from) (centrePoint))
            	(move Pass)
//                (if (= (state at:(from) level:(level)) 7)
//                    (move 
//                        (from (from) level:(level))
//                        (to ("BeginningExtensionTrack"))
//                    )
//                    (if ("Throw1")
//                        (move Select
//                            (from (from) level:(level))
//                            (then 
//                                (set State at:(last To) level:(last LevelTo) (+ 1 (state at:(last To) level:(last LevelTo))))
//                            )
//                        )
//                    )
//                )
                 (move
                      (from (from) level:(level)
                    	if:(or 
                    		(= 1 (state at:(from) level:(level)))
                    		("Throw1")
                    	)
                       )
                        (to
                            ("SiteToMoveOnTrack" "Track" ("ThrowValue"))
                            if:True
                        )
                        (then
                        	(if (!= 1 (state at:(last To) level:(last LevelTo)))
                        		(set State at:(last To) level:(last LevelTo) 1)
                        	)
                        )
                    )
            )
        )
        (piece "Bankor" Neutral)
    })
    (rules 
        (start {
            (place Stack items:<Player:init> 85)
            (place Stack "Bankor0" 85)
        })
        (play 
            (do (if (<= (var) 0) (roll)) 
                next:(if (> (var) 0)
                	(move Pass)
                    //("MoveBankor")
                    (if (!= 0 ("ThrowValue")) (forEach Piece))
                )
            )
        )
        (end {
            (forEach Player
                if:("NoPiece" Player) 
                (result Player Loss)
            )
            (forEach Player
                if:("BankorPhaseDone")
                (result Player Win)
            )
        })
    )
)

//------------------------------------------------------------------------------

(option "Players" <Player> args:{ <number> <init>}
    {
    (item "2" <2> <{"Stick2" "Stick1"}> "The game has 2 players.") 
    (item "3" <3> <{"Stick3" "Stick2" "Stick1"}> "The game has 3 players.")  
    (item "4" <4> <{"Stick4" "Stick3" "Stick2" "Stick1"}> "The game has 4 players.")*  
    (item "5" <5> <{"Stick5" "Stick4" "Stick3" "Stick2" "Stick1"}> "The game has 5 players.") 
    (item "6" <6> <{"Stick6" "Stick5" "Stick4" "Stick3" "Stick2" "Stick1"}> "The game has 6 players.") 
    (item "7" <7> <{"Stick7" "Stick6" "Stick5" "Stick4" "Stick3" "Stick2" "Stick1"}> "The game has 7 players.") 
    (item "8" <8> <{"Stick8" "Stick7" "Stick6" "Stick5" "Stick4" "Stick3" "Stick2" "Stick1"}> "The game has 8 players.") 
    }
)

//------------------------------------------------------------------------------

(rulesets { 
    
    (ruleset "Ruleset/Sig wa Duqqan (Houmt Taourit) (Described)" {
        "Players/4"
        }
        variations:{"Players/2" "Players/3" "Players/5" "Players/6" "Players/7" "Players/8"}
    )*
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        }
    )
    
    (graphics {
        (board Style Spiral)
        (stackType 0 Ground)
        (piece Rename piece:"Bankor" "Marker")
        (piece Colour "Die" state:1 fillColour:(colour Green))
        (piece Scale "Stick" 0.5)
        (piece Scale "Bankor" 0.5)
        (hand Placement P1 scale:0.2 offsetX:0.7 offsetY:0.9)
        (player Colour Neutral (colour Black))
    })
    
)

