
(define "Move"
	(move Step (to if:(is Empty (to))) (then "PostActionUpdate"))
)

(define "Shoot"
	(move Select
		(from)
		(to
			(intersection 
				(sites Occupied by:Enemy container:"Board")
            	(sites Distance from:(from) (range 1 (state at:(from))))
            )
		)
		(then 
			(and
				(if	(= (value Piece at:(last To)) 1)
					(remove (last To))
					(set Value at:(last To) (- (value Piece at:(last To)) 1))
				)
				"PostActionUpdate"
			)
		)
	)
)

(define "Trade"
	(move Select
		(from)
		(to
			(intersection 
				(sites Occupied by:Enemy container:"Board")
            	(sites Distance from:(from) (range 1 (state at:(from))))
            )
		)
		(then 
			(and
				(addScore (player (who at:(last To))) 1)
				"PostActionUpdate"
			)
		)
	)
)

(define "Upgrade"
	(move Select
		(from)
		(to)
		(then 
			(and
				(set State at:(last To) (+ 1 (state at:(last To))))
				"PostActionUpdate"
			)
		)
	)
)

(define "Pass"
	(move Pass
    	(then
			(addScore
		        Mover
		        1
		    )
		)
	)
)

(define "PostActionUpdate"
	(if (> (score Mover) 1)
		(and 
			(addScore
		        Mover
		        -1
		    )
		    (moveAgain)
    	)
    )
)

//------------------------------------------------------------------------------

(game "Tank Tactics"  
    (players <Players:numPlayers>)  
    (equipment { 
        (board (rectangle <Board:size>)) 
        (hand Each)
        (piece "Tank" Each (or {"Move" "Shoot" "Trade" "Upgrade"}))
    })  
    (rules 
    	(meta (passEnd NoEnd))
        (start { 
        	(set Score Each 1)
            <Players:setupRules>
        })
        phases:{
        (phase "Placement"
            (play
                (move 
                    (from (handSite Mover)) 
                    (to (sites Empty)) 
                )  
            ) 
            (nextPhase Mover ("HandEmpty" Mover) "Movement")
        )
        (phase "Movement" 
	        (play 
	        	(or 
	            	(forEach Piece)
	            	"Pass"
	            )
	        )
	    )}
        (end 
            (forEach NonMover 
                if:(= (count Pieces Player) 0) (result Player Loss)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Number of Players" <Players> args:{<numPlayers> <setupRules>}
    {
    (item "2 Players" 
    	<2> 
    	<
    		(place "Tank1" (handSite P1) state:2 value:3) 
    		(place "Tank2" (handSite P2) state:2 value:3)
    	> 
    	"2 players."
    )**
    (item "3 Players" 
    	<3> 
    	<
    		(place "Tank1" (handSite P1) state:2 value:3) 
    		(place "Tank2" (handSite P2) state:2 value:3)
    		(place "Tank3" (handSite P3) state:2 value:3)
    	> 
    	"3 players."
    )
    }
)

(option "Board Size" <Board> args:{ <size> }
    {
    (item "5x10" <5 10> "The game is played on a 5x10 board.")**
    (item "10x20" <10 20> "The game is played on a 10x20 board.")
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "A basic implementation of a prototype game presented at GDC13.")
        (rules "TODO")
        (source "<a href=\"https://www.youtube.com/watch?v=t9WMNuyjm4w\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Youtube</a>")
        (version "1.2.4")
        (classification "board/war/replacement/eliminate/all")
        (author "Luke Muscat and Joe Gatling")
        (credit "Matthew Stephenson")
        }
    )
    
    (graphics {
        (show Piece Value CornerLeft offsetImage:true valueOutline:true)
        (show Piece State CornerRight offsetImage:true valueOutline:true)
    })
    
)
