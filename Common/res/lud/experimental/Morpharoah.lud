//-------------------------------------------------
(define "SitesEdge"
 (union 
  {
   <Board:north>
   <Board:south>
   <Board:east>
   <Board:west>
  }
// (difference (sites Outer) <Board:excludeFromEdge>)
))

(define "DiagonallyAdjacent2"
 (sites Direction
  from:#1 
  (difference
   (difference
    (difference
     (difference Diagonal
    N) 
   S) 
  E) 
 W) 
  distance:1
)) 


(define "EdgeMajority"
 (<= 2
  (count Pieces Mover in:(sites Around (to) Orthogonal)) 
))

(define "Majority"
 (<= 3
  (count Pieces Mover in:(sites Around (to) Orthogonal)) 
))

(define "LobsidedVEmbrace"
 (<= 1
  (+
   (results
    from:(to)
    to:(intersection
     (sites Around (from) Orthogonal)
     (sites Occupied by:Mover)
    )
    (if 
     (and
      (< 0 
      (count Sites
        in:(intersection
         {
          (sites Around (to) Orthogonal)
          (sites Around (from) Orthogonal)
          (sites Occupied by:Mover)
         }
      )))
      (< 0 
      (count Sites
        in:(intersection
         {
          ("DiagonallyAdjacent2" (to))
          (sites Around (from) Orthogonal)
          (sites Occupied by:Mover)
         }
     ))))
     1
     0
)))))

(define "AdjacentPair"
 (<= 1
  (+
   (results
    from:(to)
    to:(intersection
     (sites Around (from) Orthogonal)
     (sites Occupied by:Mover)
    )
    (if 
     (< 0 
      (count Sites
       in:(intersection
        {
         (sites Around (to) Orthogonal)
         (sites Around (from) Orthogonal)
         (sites Occupied by:Mover)
        }
     )))
     1
     0
)))))

(define "Check4Win"
 (if
  (is Mover P1)
  (if 
   (is Connected Orthogonal { <Board:north> <Board:south> })
   (trigger "Win" Mover)
  )
  (if 
   (is Connected Orthogonal { <Board:east> <Board:west> })
   (trigger "Win" Mover)
  )
))

//---------------------------------------
(game "Morpharoah" 
 (players 2)
 (equipment
  {
   (board  <Board:type>  use:Cell)
   (piece "Disc" Each )
   (piece "Disc" Neutral)
  }
 )
 (rules 
  (play
   (or
    {
     (move Add
      (to 
       (sites Empty)
     ))
     (move Add
      (to
       (intersection (sites Occupied by:Next) ("SitesEdge"))
       if:(<Edge:controlType>)
       (apply (remove (to)))
     ))
     (move Add
      (to
       (difference (sites Occupied by:Next) ("SitesEdge"))
       if:(<Center:controlType>)
       (apply (remove (to)))
     ))
    }
    (then "Check4Win")
  ))
  (end 
   (if
    (is Triggered "Win" Mover)
    (result Mover Win)
))))

//------------------------------------

(option "Board Size" <Board>
 args:
 {
  <size> <type> <north> <south> <east> <west> 
 } 
 {
  (item "Order 1" 
   <1.6>
   <(remove (dual (tiling T33434 5)) cells: {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 20 21 24 27 28 29 35 36 39 40 44 45 46 47 53 54 55 59 60 64 65 71 72 76 79 85 90 93 94 95 96 97 98 99})> 
   <(sites {43 44 45 46 47})> 
   <(sites {0 1 2 3 4})> 
   <(sites {6 13 21 27 37})> 
   <(sites {10 20 26 34 41})> 
   "Using an order 1 board with 48 cells"
  )***

  (item "Order 2"
   <1.6>
   <(remove (dual (tiling T33434 9)) cells: {})>  
    <(sites {149 151 152 153 154 155 156 157 158 159})> 
    <(sites {0 1 2 3 4 5 6 7 8 10})> 
    <(sites {12 25 39 49 67 84 97 111 121 139})> 
    <(sites {20 38 48 62 75 92 110 120 134 147})> 
    "Using an order 2 board with 160 cells"
   )
 }
)

(option "Edge Control" <Edge> args:{ <controlType> } 
   {
 (item "Majority" <"EdgeMajority"> "Any 2 of your pieces adjacent to an edge location give control of the location.")
 (item "Adjacent Pair" <"AdjacentPair"> "A mutually adjacent pair of your pieces to an edge location gives control there.")*
   }
)

(option "Mid-Board Control" <Center> args:{ <controlType> } 
   {
 (item "Majority" <"Majority"> "but not next to pieces that already have more than 2 neighbors.")
 (item "Ortho plus diagonal embrace" <"LobsidedVEmbrace"> "To control a site with your adjacent stones, one stone must connect to a second orthogonally, and to a third diagonally.")**
   }
)

//----------------------------------------------------------
(metadata
 (info
  {
  }
 )
 
  (define "ColourP1" (colour 229 92 0 #1))
  (define "ColourP2" (colour 252 255 234 #1))
  
  (graphics 
  {
   (player Colour P1 ("ColourP1" ~))
   (player Colour P2 ("ColourP2" ~))
   (piece Scale Neutral "Disc" 1.2)
   (piece Scale P1 "Disc" 0.99)
   (piece Scale P2 "Disc" 0.97)
   (piece Colour P1 fillColour:("ColourP1" ~) strokeColour:(colour 173 173 173))
   (piece Colour P2 fillColour:(colour White) strokeColour:(colour 173 173 173))
   (board Colour Phase0 (colour 246 236 213))
   (board Colour OuterEdges (colour 0 0 0))
   (board Colour InnerEdges (colour 0 0 0))
   (board StyleThickness OuterEdges 1.0)
   (board StyleThickness InnerEdges 0.5)
   (board Placement scale:<Board:size>)
   (region Colour P1 <Board:north> ("ColourP1" 100))
   (region Colour P1 <Board:south> ("ColourP1" 100))
   (region Colour P2 <Board:east> ("ColourP2" 180))
   (region Colour P2 <Board:west> ("ColourP2" 180))
  }
))



