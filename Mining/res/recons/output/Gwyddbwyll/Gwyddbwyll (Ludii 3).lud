(game "Gwyddbwyll" 
    (players 2)
    
    (equipment { 
        (board 
            (square 8)
        )
        
        (piece "King" Each 
            (or 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
                
                (if 
                    (= 1 
                        (state at:
                            (from)
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (not 
                                (is Enemy 
                                    (who at:
                                        (between)
                                    )
                                )
                            )
                        )
                        
                        (to if:
                            (not 
                                (is Friend 
                                    (who at:
                                        (to)
                                    )
                                )
                            )
                            
                            (apply 
                                (if 
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (remove 
                                        (to)
                                    )
                                )
                            )
                        )
                    )
                )
                
                (then 
                    (if 
                        (= 
                            (state at:
                                (last To)
                            )
                        1)
                        
                        (set State at:
                            (last To)
                        0)
                    )
                )
            )
        )
        
        (piece "Rook" Each 
            (move Slide Orthogonal 
                (to if:
                    (is Enemy 
                        (who at:
                            (to)
                        )
                    )
                    
                    (apply 
                        (remove 
                            (to)
                        )
                    )
                )
            )
        )
        
        (piece "Bishop" Each 
            (move Hop Diagonal 
                (between if:True)
                
                (to if:
                    (not 
                        (is Friend 
                            (who at:
                                (to)
                            )
                        )
                    )
                    
                    (apply 
                        (if 
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
        )
        
        (piece "Knight" Each 
            (move Leap { { F F R F }
                { F F L F }
                }
                
                (to if:
                    (not 
                        (is Friend 
                            (who at:
                                (to)
                            )
                        )
                    )
                    
                    (apply 
                        (if 
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
        )
        
        (piece "Queen" Each 
            (or 
                (move Step Diagonal 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
                
                (if 
                    (= 1 
                        (state at:
                            (from)
                        )
                    )
                    
                    (move Hop Diagonal 
                        (between if:True)
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
                
                (then 
                    (if 
                        (= 
                            (state at:
                                (last To)
                            )
                        1)
                        
                        (set State at:
                            (last To)
                        0)
                    )
                )
            )
        )
        
        (piece "Pawn" Each 
            (or { 
                (move Step Forward 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
                
                (move Step 
                    (directions { FR FL }
                    )
                    
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
                
                (or 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                )
                }
                
                (then 
                    (if 
                        (is In 
                            (last To)
                            
                            (sites Mover "Promotion")
                        )
                        
                        (and 
                            (promote 
                                (last To)
                                
                                (piece 
                                    (id "Queen" Mover)
                                )
                            )
                            
                            (set State at:
                                (last To)
                            1)
                        )
                    )
                )
            )
        )
        
        (regions "Promotion" P1 
            (sites Top)
        )
        
        (regions "Promotion" P2 
            (sites Bottom)
        )
        }
    )
    
    (rules 
        (start { 
            (place "Bishop1" 
                (sites { "C1" "F1"}
                )
            )
            
            (place "Rook1" 
                (sites { "C2" "F2"}
                )
            )
            
            (place "Knight1" 
                (sites { "D2" "E2"}
                )
            )
            
            (place "King1" coord:"E1")
            
            (place Stack "Pawn1" 
                (sites Row 2)
            )
            
            (place Stack "Queen1" 
                (sites { "D3"}
                )
            )
            
            (place "Bishop2" 
                (sites { "C8" "F8"}
                )
            )
            
            (place "Rook2" 
                (sites { "C7" "F7"}
                )
            )
            
            (place "Knight2" 
                (sites { "D7" "E7"}
                )
            )
            
            (place "King2" coord:"E8")
            
            (place Stack "Pawn2" 
                (sites Row 5)
            )
            
            (place Stack "Queen2" 
                (sites { "D6"}
                )
            )
            }
        )
        
        (play 
            (do 
                (forEach Piece)
                ifAfterwards:
                (not 
                    (is Threatened 
                        (id "King" Mover)
                    )
                )
            )
        )
        
        (end { 
            (if 
                (and 
                    (is Threatened 
                        (id "King" Next)
                    )
                    
                    (not 
                        (can Move 
                            (do 
                                (forEach Piece Next)
                                ifAfterwards:
                                (not 
                                    (is Threatened 
                                        (id "King" Next)
                                    )
                                )
                            )
                        )
                    )
                )
                
                (result Mover Win)
            )
            
            (if 
                (no Moves Next)
                
                (result Mover Win)
            )
            
            (if 
                (= 
                    (count Pieces Next)
                1)
                
                (result Mover Win)
            )
            }
        )
    )
)


(metadata (recon {
        (concept "NumComponentsTypePerPlayer" minValue:2 maxValue:40)
    })
    )