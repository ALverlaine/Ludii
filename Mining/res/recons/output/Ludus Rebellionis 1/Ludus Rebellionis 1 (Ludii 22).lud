(game "Ludus Rebellionis 1" 
    (players 2)
    
    (equipment { 
        (board 
            (square 8)
        )
        
        (piece "Queen" Each 
            (move Step 
                (to if:
                    (not 
                        (is Friend 
                            (who at:
                                (to)
                            )
                        )
                    )
                    
                    (apply 
                        (if 
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
        )
        
        (piece "King" Each 
            (move Step 
                (to if:
                    (is Empty 
                        (to)
                    )
                )
            )
        )
        
        (piece "Pawn" Each 
            (move Select 
                (from 
                    (last To)
                )
                
                (then 
                    (if 
                        (= 
                            (count at:
                                (last To)
                            )
                        1)
                        
                        (remove 
                            (last To)
                        )
                        
                        (and 
                            (set Count at:
                                (last To)
                                
                                (- 
                                    (count at:
                                        (last To)
                                    )
                                1)
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
        )
        }
    )
    
    (rules 
        (start { 
            (place "King1" coord:"H8")
            
            (place "Queen1" coord:"G8")
            
            (place "King2" coord:"A8")
            
            (place "Queen2" coord:"B8")
            
            (place "Pawn1" 
                (difference 
                    (expand 
                        (sites Bottom)
                    steps:3)
                    
                    (sites Phase 0)
                )
            )
            
            (place "Pawn2" 
                (difference 
                    (expand 
                        (sites Bottom)
                    steps:3)
                    
                    (sites Phase 1)
                )
            )
            }
        )
        
        (play 
            (do 
                (forEach Piece)
                ifAfterwards:
                (not 
                    (is Threatened 
                        (id "King" Mover)
                    )
                )
                
                (then 
                    (if 
                        (and 
                            (= 1 
                                (state at:
                                    (where "King" Next)
                                )
                            )
                            
                            (is Threatened 
                                (id "King" Next)
                            )
                        )
                        
                        (set State at:
                            (where "King" Next)
                        0)
                    )
                )
            )
        )
        
        (end { 
            (if 
                (and 
                    (is Threatened 
                        (id "King" Next)
                    )
                    
                    (not 
                        (can Move 
                            (do 
                                (forEach Piece Next)
                                ifAfterwards:
                                (not 
                                    (is Threatened 
                                        (id "King" Next)
                                    )
                                )
                            )
                        )
                    )
                )
                
                (result Mover Win)
            )
            
            (if 
                (or 
                    (no Moves Mover)
                    
                    (= 
                        (counter)
                    99)
                )
                
                (result Mover Draw)
            )
            }
        )
    )
)


