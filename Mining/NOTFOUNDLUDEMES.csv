Payoff,game.util.end.Payoff,Ludeme,payoff,payoff,1,0,1,"Defines a payoff to set when using the {\tt (payoffs ...)} end rule."
Direction,game.util.directions.Direction,Structural,direction,direction,1,0,0,"null"
CompassDirection,game.util.directions.CompassDirection,Structural,compassDirection,compassDirection,1,0,0,"Compass directions."
DirectionFacing,game.util.directions.DirectionFacing,Structural,directionFacing,directionFacing,1,0,0,"Provides a general ``direction'' description for use in a variety of  contexts."
RelativeDirection,game.util.directions.RelativeDirection,Structural,relativeDirection,relativeDirection,1,0,0,"Describes categories of relative directions."
AbsoluteDirection,game.util.directions.AbsoluteDirection,Structural,absoluteDirection,absoluteDirection,1,0,0,"Describes categories of absolute directions."
StackDirection,game.util.directions.StackDirection,Structural,stackDirection,stackDirection,1,0,0,"Describes the bottom or the top of a stack as origin for functions."
Card,game.util.equipment.Card,Ludeme,card,equipment.card,1,0,1,"Defines an instance of a playing card."
Region,game.util.equipment.Region,Ludeme,region,equipment.region,1,0,1,"Defines a region of sites within a container."
SetStartSitesType,game.rules.start.set.SetStartSitesType,Structural,setStartSitesType,setStartSitesType,1,0,0,"Defines the properties of board sites that can be set in the starting rules."
SetStartPlayerType,game.rules.start.set.SetStartPlayerType,Structural,setStartPlayerType,setStartPlayerType,1,0,0,"Defines the player properties that can be set in the starting rules."
StartRule,game.rules.start.StartRule,Structural,startRule,startRule,1,0,0,"Sets the initial setup rule for the start of each trial (i.e. game)."
Split,game.rules.start.split.Split,Ludeme,split,split,1,0,1,"Splits a deck of cards."
Pin,game.rules.meta.Pin,Ludeme,pin,pin,1,0,1,"To filter some remove moves in case some pieces can not be removed because of pieces on top of them."
MetaRule,game.rules.meta.MetaRule,Structural,metaRule,metaRule,1,0,0,"Metarule defined before play that supercedes all other rules."
Gravity,game.rules.meta.Gravity,Ludeme,gravity,gravity,1,0,1,"To apply a certain type of gravity after making a move."
Effect,game.rules.play.moves.nonDecision.effect.Effect,Structural,effect,effect,1,0,0,"Defines moves which do not involve a player decision."
Deal,game.rules.play.moves.nonDecision.effect.Deal,Ludeme,deal,effect.deal,1,0,1,"Deals cards or dominoes to each player."
Shoot,game.rules.play.moves.nonDecision.effect.Shoot,Ludeme,shoot,shoot,1,0,1,"Is used to shoot an item from one site to another with a specific direction."
SetValueType,game.rules.play.moves.nonDecision.effect.set.SetValueType,Structural,setValueType,setValueType,1,0,0,"Defines the types of integer values that can be set in the game state."
SetPlayerType,game.rules.play.moves.nonDecision.effect.set.SetPlayerType,Structural,setPlayerType,setPlayerType,1,0,0,"Defines properties related to the players that can be set in the game state."
SetSiteType,game.rules.play.moves.nonDecision.effect.set.SetSiteType,Structural,setSiteType,setSiteType,1,0,0,"Defines properties of sites that can be set in the game state."
Bet,game.rules.play.moves.nonDecision.effect.Bet,Ludeme,bet,bet,1,0,1,"Is used to bet an amount."
PlayCard,game.rules.play.moves.nonDecision.effect.PlayCard,Ludeme,playCard,playCard,1,0,1,"Plays any card in a player's hand to the board at their position."
MaxMovesType,game.rules.play.moves.nonDecision.effect.requirement.max.MaxMovesType,Structural,maxMovesType,maxMovesType,1,0,0,"Defines the types of properties which can be used for the Max super ludeme with only a move ludeme in entry."
Random,game.rules.play.moves.nonDecision.effect.Random,Ludeme,random,random,1,0,1,"Returns a set of moves according to a set of probabilities."
Operator,game.rules.play.moves.nonDecision.operator.Operator,Structural,operator,operator,1,0,0,"Defines operations that combine lists of moves, then optionally perform some additional effects."
NonDecision,game.rules.play.moves.nonDecision.NonDecision,Structural,nonDecision,nonDecision,1,0,0,"Defines moves that do not involve an immediate decision by the player."
Moves,game.rules.play.moves.Moves,Structural,moves,moves,1,0,0,"Returns a moves collection."
MoveSiteType,game.rules.play.moves.decision.MoveSiteType,Structural,moveSiteType,moveSiteType,1,0,0,"Defines the types of decision move corresponding to a single site."
Decision,game.rules.play.moves.decision.Decision,Structural,decision,decision,1,0,0,"Defines moves that involve a decision by the player."
MoveMessageType,game.rules.play.moves.decision.MoveMessageType,Structural,moveMessageType,moveMessageType,1,0,0,"Defines the types of decision move relative to a message."
MoveSimpleType,game.rules.play.moves.decision.MoveSimpleType,Structural,moveSimpleType,moveSimpleType,1,0,0,"Defines the types of decision move corresponding to move with no parameters except the subsequents."
EndRule,game.rules.end.EndRule,Structural,endRule,endRule,1,0,0,"Declares a generic end rule."
Payoffs,game.rules.end.Payoffs,Ludeme,payoffs,payoffs,1,0,1,"Is used to end a game based on the payoff of each player."
Deck,game.equipment.container.other.Deck,Ludeme,deck,deck,1,0,1,"Generates a deck of cards."
Container,game.equipment.container.Container,Structural,container,container,1,0,0,"Defines a container."
Item,game.equipment.Item,Structural,item,item,1,0,0,"Provides a Grammar placeholder for items to go in the equipment collection."
Component,game.equipment.component.Component,Ludeme,component,component,1,0,1,"Defines a component."
Die,game.equipment.component.Die,Ludeme,die,die,1,0,1,"Defines a single non-stochastic die used as a piece."
Domino,game.equipment.component.tile.Domino,Ludeme,domino,domino,1,0,1,"Defines a single domino."
Card,game.equipment.component.Card,Ludeme,card,component.card,1,0,1,"Defines a card with specific properties such as the suit or the rank of the  card in the deck."
Team,game.functions.intArray.iteraror.Team,Ludeme,team,team,1,0,1,"Returns the team iterator."
Intersection,game.functions.intArray.math.Intersection,Ludeme,intersection,intArray.math.intersection,1,0,1,"Returns the intersection of many regions."
PlayersManyType,game.functions.intArray.players.PlayersManyType,Structural,playersManyType,playersManyType,1,0,0,"Defines the types of set of players which can be iterated."
PlayersTeamType,game.functions.intArray.players.PlayersTeamType,Structural,playersTeamType,playersTeamType,1,0,0,"Defines the types of team which can be iterated."
IntArrayFunction,game.functions.intArray.IntArrayFunction,Structural,intArrayFunction,ints,1,0,0,"null"
Card,game.functions.ints.card.Card,SuperLudeme,card,card.card,1,0,1,"Returns a site related to the last move."
CardSiteType,game.functions.ints.card.CardSiteType,Structural,cardSiteType,cardSiteType,1,0,0,"Defines the types of properties which can be returned for the Card super ludeme according an index and optionally a level."
Track,game.functions.ints.iterator.Track,Ludeme,track,iterator.track,1,0,1,"Returns the ``track'' value of the context."
Edge,game.functions.ints.iterator.Edge,Ludeme,edge,iterator.edge,1,0,1,"Returns the corresponding edge if both vertices are specified, else returns  the current ``edge'' value from the context."
CountComponentType,game.functions.ints.count.CountComponentType,Structural,countComponentType,countComponentType,1,0,0,"Defines the types of components that can be counted within a game."
CountSimpleType,game.functions.ints.count.CountSimpleType,Structural,countSimpleType,countSimpleType,1,0,0,"Defines the types of properties that can be counted without a parameter (apart from the graph element type, where relevant)."
CountSiteType,game.functions.ints.count.CountSiteType,Structural,countSiteType,countSiteType,1,0,0,"Defines the types of sites that can be counted within a game."
LastType,game.functions.ints.last.LastType,Structural,lastType,lastType,1,0,0,"Defines the types of Last integer ludeme."
ToInt,game.functions.ints.ToInt,Ludeme,toInt,toInt,1,0,1,"Converts a BooleanFunction or a FloatFunction to an integer."
FloatFunction,game.functions.floats.FloatFunction,Structural,floatFunction,float,1,0,0,"null"
Div,game.functions.floats.math.Div,Ludeme,/,floats.math./,1,0,1,"To divide a value by another."
Log,game.functions.floats.math.Log,Ludeme,log,log,1,0,1,"Computes the logarithm of a value."
Max,game.functions.floats.math.Max,Ludeme,max,floats.math.max,1,0,1,"Returns the maximum of specified values."
Pow,game.functions.floats.math.Pow,Ludeme,^,floats.math.^,1,0,1,"Computes the first parameter to the power of the second parameter."
Sqrt,game.functions.floats.math.Sqrt,Ludeme,sqrt,sqrt,1,0,1,"Computes the square root of a value."
Cos,game.functions.floats.math.Cos,Ludeme,cos,cos,1,0,1,"Computes the cosine of a value."
Abs,game.functions.floats.math.Abs,Ludeme,abs,floats.math.abs,1,0,1,"Return the absolute value of a float."
Sin,game.functions.floats.math.Sin,Ludeme,sin,sin,1,0,1,"Computes the sine of a value."
Min,game.functions.floats.math.Min,Ludeme,min,floats.math.min,1,0,1,"Returns the minimum of specified values."
Tan,game.functions.floats.math.Tan,Ludeme,tan,tan,1,0,1,"Computes the tangent of a value."
Mul,game.functions.floats.math.Mul,Ludeme,*,floats.math.*,1,0,1,"Multiply many values."
Add,game.functions.floats.math.Add,Ludeme,+,floats.math.+,1,0,1,"Adds many values."
Exp,game.functions.floats.math.Exp,Ludeme,exp,exp,1,0,1,"Computes the exponential of a value."
Log10,game.functions.floats.math.Log10,Ludeme,log10,log10,1,0,1,"Computes the logarithm 10 of a value."
ToFloat,game.functions.floats.ToFloat,Ludeme,toFloat,toFloat,1,0,1,"Converts a BooleanFunction or an IntFunction to a float."
IsPuzzleRegionResultType,game.functions.booleans.deductionPuzzle.is.IsPuzzleRegionResultType,Structural,isPuzzleRegionResultType,isPuzzleRegionResultType,1,0,0,"Defines the types of Is test for puzzle according to region and a specific result to check."
Xor,game.functions.booleans.math.Xor,Ludeme,xor,xor,1,0,1,"Tests the Xor boolean node."
IsGraphType,game.functions.booleans.is.IsGraphType,Structural,isGraphType,isGraphType,1,0,0,"Defines the types of Is test according to a graph element."
IsSimpleType,game.functions.booleans.is.IsSimpleType,Structural,isSimpleType,isSimpleType,1,0,0,"Defines the types of Is test for a player with no parameter."
IsStringType,game.functions.booleans.is.IsStringType,Structural,isStringType,isStringType,1,0,0,"Defines the types of Is test according to a String parameter."
IsSiteType,game.functions.booleans.is.IsSiteType,Structural,isSiteType,isSiteType,1,0,0,"Defines the types of Is test for a site."
IsConnectType,game.functions.booleans.is.IsConnectType,Structural,isConnectType,isConnectType,1,0,0,"Defines the types of Is for a connected or blocked test."
IsIntegerType,game.functions.booleans.is.IsIntegerType,Structural,isIntegerType,isIntegerType,1,0,0,"Defines the types of Is test according to an integer."
IsTreeType,game.functions.booleans.is.IsTreeType,Structural,isTreeType,isTreeType,1,0,0,"Defines the types of Is test for a regular graph."
IsComponentType,game.functions.booleans.is.IsComponentType,Structural,isComponentType,isComponentType,1,0,0,"Defines the types of Is test according to a component and a site/region."
IsPlayerType,game.functions.booleans.is.IsPlayerType,Structural,isPlayerType,isPlayerType,1,0,0,"Defines the types of Is test for a player."
ToBool,game.functions.booleans.ToBool,Ludeme,toBool,toBool,1,0,1,"Converts a IntFunction or a FloatFunction to a boolean (false if 0, else  true)."
AllSimpleType,game.functions.booleans.all.AllSimpleType,Structural,allSimpleType,allSimpleType,1,0,0,"Defines the query types that can be used for an {\tt (all ...)} test with no parameter."
AllSitesType,game.functions.booleans.all.AllSitesType,Structural,allSitesType,allSitesType,1,0,0,"Defines the query types that can be used for an {\tt (all ...)} test related to sites."
BooleanFunction,game.functions.booleans.BooleanFunction,Structural,booleanFunction,boolean,1,0,0,"null"
ConcentricShapeType,game.functions.graph.generators.shape.concentric.ConcentricShapeType,Structural,concentricShapeType,concentricShapeType,1,0,0,"Defines star shape types for known board types."
DiagonalsType,game.functions.graph.generators.basis.square.DiagonalsType,Structural,diagonalsType,diagonalsType,1,0,0,"Defines how to handle diagonal relations on the Square tiling."
SquareShapeType,game.functions.graph.generators.basis.square.SquareShapeType,Structural,squareShapeType,squareShapeType,1,0,0,"Defines known shapes for the square tiling."
Basis,game.functions.graph.generators.basis.Basis,Structural,basis,basis,1,0,0,"Defines known basis types (i.e. tilings) for board graphs."
Celtic,game.functions.graph.generators.basis.celtic.Celtic,Ludeme,celtic,celtic,1,0,1,"Defines a board based on Celtic knotwork."
TilingType,game.functions.graph.generators.basis.tiling.TilingType,Structural,tilingType,tilingType,1,0,0,"Defines known tiling types for boards (apart from regular tilings)."
Quadhex,game.functions.graph.generators.basis.quadhex.Quadhex,Ludeme,quadhex,quadhex,1,0,1,"Defines a ``quadhex'' board."
TriShapeType,game.functions.graph.generators.basis.tri.TriShapeType,Structural,triShapeType,triShapeType,1,0,0,"Defines known shapes for the triangular tiling."
HexShapeType,game.functions.graph.generators.basis.hex.HexShapeType,Structural,hexShapeType,hexShapeType,1,0,0,"Defines known shapes for the hexagonal tiling."
BrickShapeType,game.functions.graph.generators.basis.brick.BrickShapeType,Structural,brickShapeType,brickShapeType,1,0,0,"Defines known shapes for the square tiling."
Brick,game.functions.graph.generators.basis.brick.Brick,SuperLudeme,brick,brick,1,0,1,"Defines a board on a brick tiling using 1x2 rectangular brick tiles."
Clip,game.functions.graph.operators.Clip,Ludeme,clip,clip,1,0,1,"Returns the result of clipping a graph to a specified shape."
Recoordinate,game.functions.graph.operators.Recoordinate,Ludeme,recoordinate,recoordinate,1,0,1,"Regenerates the coordinate labels for the elements of a graph."
Layers,game.functions.graph.operators.Layers,Ludeme,layers,layers,1,0,1,"Makes multiple layers of the specified graph for 3D games."
RangeFunction,game.functions.range.RangeFunction,Structural,rangeFunction,range,1,0,0,"null"
Div,game.functions.dim.math.Div,Ludeme,/,dim.math./,1,0,1,"To divide a value by another."
Max,game.functions.dim.math.Max,Ludeme,max,dim.math.max,1,0,1,"Returns the maximum of two specified values."
Abs,game.functions.dim.math.Abs,Ludeme,abs,dim.math.abs,1,0,1,"Return the absolute value of a dim."
Min,game.functions.dim.math.Min,Ludeme,min,dim.math.min,1,0,1,"Returns the minimum of two specified values."
DimFunction,game.functions.dim.DimFunction,Structural,dimFunction,dim,1,0,0,"null"
SitesIndexType,game.functions.region.sites.SitesIndexType,Structural,sitesIndexType,sitesIndexType,1,0,0,"Specifies sets of board sites by some indexed property."
SitesEdgeType,game.functions.region.sites.SitesEdgeType,Structural,sitesEdgeType,sitesEdgeType,1,0,0,"Specifies set of edge sites."
SitesPlayerType,game.functions.region.sites.SitesPlayerType,Structural,sitesPlayerType,sitesPlayerType,1,0,0,"Specifies sets of sites associated with given players."
LineOfSightType,game.functions.region.sites.LineOfSightType,Structural,lineOfSightType,lineOfSightType,1,0,0,"Specifies the expected types of line of sight tests."
SitesSimpleType,game.functions.region.sites.SitesSimpleType,Structural,sitesSimpleType,sitesSimpleType,1,0,0,"Specifies set of sites that do not require any parameters (apart from the graph element type)."
SitesMoveType,game.functions.region.sites.SitesMoveType,Structural,sitesMoveType,sitesMoveType,1,0,0,"Specifies sets of sites based on the positions of moves."
RepetitionType,game.types.play.RepetitionType,Structural,repetitionType,repetitionType,1,0,0,"Defines the possible types of repetition that can occur in a game."
WhenType,game.types.play.WhenType,Structural,whenType,whenType,1,0,0,"Defines when to perform certain tests or actions within a game."
ModeType,game.types.play.ModeType,Structural,modeType,modeType,1,0,0,"Defines the possible modes of play."
ResultType,game.types.play.ResultType,Structural,resultType,resultType,1,0,0,"Defines expected outcomes for each game."
PassEndType,game.types.play.PassEndType,Structural,passEndType,passEndType,1,0,0,"Defines the possible types of ending results if all players are passed their turn."
PrevType,game.types.play.PrevType,Structural,prevType,prevType,1,0,0,"Defines the possible previous states to refer to."
DealableType,game.types.component.DealableType,Structural,dealableType,dealableType,1,0,0,"Specifies which types of components can be dealt."
CardType,game.types.component.CardType,Structural,cardType,cardType,1,0,0,"Defines possible rank values of cards."
BasisType,game.types.board.BasisType,Structural,basisType,basisType,1,0,0,"Defines known tiling types for boards."
HiddenData,game.types.board.HiddenData,Structural,hiddenData,hiddenData,1,0,0,"Defines possible data to be hidden."
StoreType,game.types.board.StoreType,Structural,storeType,storeType,1,0,0,"Defines the different stores for a mancala board."
PuzzleElementType,game.types.board.PuzzleElementType,Structural,puzzleElementType,puzzleElementType,1,0,0,"Defines the possible types of variables that can be used in deduction puzzles."
LandmarkType,game.types.board.LandmarkType,Structural,landmarkType,landmarkType,1,0,0,"Defines certain landmarks that can be used to specify individual sites on the board."
StepType,game.types.board.StepType,Structural,stepType,stepType,1,0,0,"Defines possible ``turtle steps'' for describing walks through adjacent sites."
RegionTypeStatic,game.types.board.RegionTypeStatic,Structural,regionTypeStatic,regionTypeStatic,1,0,0,"Defines known (predefined) regions of the board."
ShapeType,game.types.board.ShapeType,Structural,shapeType,shapeType,1,0,0,"Defines shape types for known board shapes."
RegionTypeDynamic,game.types.board.RegionTypeDynamic,Structural,regionTypeDynamic,regionTypeDynamic,1,0,0,"Defines regions which can change during play."
TilingBoardlessType,game.types.board.TilingBoardlessType,Structural,tilingBoardlessType,tilingBoardlessType,1,0,0,"Defines supported tiling types for boardless games."
ENE,game.util.directions.CompassDirection,Constant,ENE,ENE,1,0,1,"East-North-East."
SSE,game.util.directions.CompassDirection,Constant,SSE,SSE,1,0,1,"South-South-East."
WNW,game.util.directions.CompassDirection,Constant,WNW,WNW,1,0,1,"West-North-West."
NNW,game.util.directions.CompassDirection,Constant,NNW,NNW,1,0,1,"North-North-West."
FLLL,game.util.directions.RelativeDirection,Constant,FLLL,FLLL,1,0,1,"Forward-Left-Left-Left direction."
BLLL,game.util.directions.RelativeDirection,Constant,BLLL,BLLL,1,0,1,"Backward-Left-Left-Left direction."
FRRR,game.util.directions.RelativeDirection,Constant,FRRR,FRRR,1,0,1,"Forward-Right-Right-Right direction."
BRRR,game.util.directions.RelativeDirection,Constant,BRRR,BRRR,1,0,1,"Backward-Right-Right-Right direction."
Angled,game.util.directions.AbsoluteDirection,Constant,Angled,Angled,1,0,1,"Angled directions."
Axial,game.util.directions.AbsoluteDirection,Constant,Axial,Axial,1,0,1,"Axial directions."
OffDiagonal,game.util.directions.AbsoluteDirection,Constant,OffDiagonal,OffDiagonal,1,0,1,"Off-diagonal directions."
Upward,game.util.directions.AbsoluteDirection,Constant,Upward,Upward,1,0,1,"Upward directions."
Downward,game.util.directions.AbsoluteDirection,Constant,Downward,Downward,1,0,1,"Downward directions."
Base,game.util.directions.AbsoluteDirection,Constant,Base,Base,1,0,1,"Base directions."
Support,game.util.directions.AbsoluteDirection,Constant,Support,Support,1,0,1,"Support directions."
In,game.util.directions.AbsoluteDirection,Constant,In,In,1,0,1,"Inwards directions."
U,game.util.directions.AbsoluteDirection,Constant,U,U,1,0,1,"Upper direction."
UN,game.util.directions.AbsoluteDirection,Constant,UN,UN,1,0,1,"Upwards-North direction."
UE,game.util.directions.AbsoluteDirection,Constant,UE,UE,1,0,1,"Upwards-East direction."
US,game.util.directions.AbsoluteDirection,Constant,US,US,1,0,1,"Upwards-South direction."
UW,game.util.directions.AbsoluteDirection,Constant,UW,UW,1,0,1,"Upwards-West direction."
D,game.util.directions.AbsoluteDirection,Constant,D,D,1,0,1,"Down direction."
DN,game.util.directions.AbsoluteDirection,Constant,DN,DN,1,0,1,"Down-North direction."
DNE,game.util.directions.AbsoluteDirection,Constant,DNE,DNE,1,0,1,"Down-North-East."
DE,game.util.directions.AbsoluteDirection,Constant,DE,DE,1,0,1,"Down-East direction."
DSE,game.util.directions.AbsoluteDirection,Constant,DSE,DSE,1,0,1,"Down-South-East."
DS,game.util.directions.AbsoluteDirection,Constant,DS,DS,1,0,1,"Down-South direction."
DSW,game.util.directions.AbsoluteDirection,Constant,DSW,DSW,1,0,1,"Down-South-West."
DW,game.util.directions.AbsoluteDirection,Constant,DW,DW,1,0,1,"Down-West direction."
DNW,game.util.directions.AbsoluteDirection,Constant,DNW,DNW,1,0,1,"Down North West."
FromBottom,game.util.directions.StackDirection,Constant,FromBottom,FromBottom,1,0,1,"To check the stack from the bottom."
Team,game.rules.start.forEach.ForEachTeamType,Constant,Team,Team,1,0,1,""
Phase,game.rules.start.set.SetStartSitesType,Constant,Phase,Phase,1,0,1,"Sets the phase of a site or region."
Amount,game.rules.start.set.SetStartPlayerType,Constant,Amount,Amount,1,0,1,"Sets the initial amount for a player."
Deck,game.rules.start.split.SplitType,Constant,Deck,Deck,1,0,1,""
Team,game.rules.play.moves.nonDecision.effect.set.SetTeamType,Constant,Team,Team,1,0,1,""
TrumpSuit,game.rules.play.moves.nonDecision.effect.set.SetTrumpType,Constant,TrumpSuit,TrumpSuit,1,0,1,""
PlayCard,game.rules.play.moves.decision.MoveSimpleType,Constant,PlayCard,PlayCard,1,0,1,"Plays a card."
NonMover,game.functions.intArray.players.PlayersManyType,Constant,NonMover,NonMover,1,0,1,"Players who are not moving."
Enemy,game.functions.intArray.players.PlayersManyType,Constant,Enemy,Enemy,1,0,1,"Enemy players."
Friend,game.functions.intArray.players.PlayersManyType,Constant,Friend,Friend,1,0,1,"Friend players (Mover + Allies)."
Ally,game.functions.intArray.players.PlayersManyType,Constant,Ally,Ally,1,0,1,"Ally players."
Team3,game.functions.intArray.players.PlayersTeamType,Constant,Team3,Team3,1,0,1,"Team 3."
Team4,game.functions.intArray.players.PlayersTeamType,Constant,Team4,Team4,1,0,1,"Team 4."
Team5,game.functions.intArray.players.PlayersTeamType,Constant,Team5,Team5,1,0,1,"Team 5."
Team6,game.functions.intArray.players.PlayersTeamType,Constant,Team6,Team6,1,0,1,"Team 6."
Team7,game.functions.intArray.players.PlayersTeamType,Constant,Team7,Team7,1,0,1,"Team 7."
Team8,game.functions.intArray.players.PlayersTeamType,Constant,Team8,Team8,1,0,1,"Team 8."
Team9,game.functions.intArray.players.PlayersTeamType,Constant,Team9,Team9,1,0,1,"Team 9."
Team10,game.functions.intArray.players.PlayersTeamType,Constant,Team10,Team10,1,0,1,"Team 10."
Team11,game.functions.intArray.players.PlayersTeamType,Constant,Team11,Team11,1,0,1,"Team 11."
Team12,game.functions.intArray.players.PlayersTeamType,Constant,Team12,Team12,1,0,1,"Team 12."
Team13,game.functions.intArray.players.PlayersTeamType,Constant,Team13,Team13,1,0,1,"Team 13."
Team14,game.functions.intArray.players.PlayersTeamType,Constant,Team14,Team14,1,0,1,"Team 14."
Team15,game.functions.intArray.players.PlayersTeamType,Constant,Team15,Team15,1,0,1,"Team 15."
Team16,game.functions.intArray.players.PlayersTeamType,Constant,Team16,Team16,1,0,1,"Team 16."
TrumpSuit,game.functions.ints.card.CardSimpleType,Constant,TrumpSuit,TrumpSuit,1,0,1,""
Rank,game.functions.ints.card.CardSiteType,Constant,Rank,Rank,1,0,1,"To return the rank of a card."
Suit,game.functions.ints.card.CardSiteType,Constant,Suit,Suit,1,0,1,"To return the suit of a card."
TrumpValue,game.functions.ints.card.CardSiteType,Constant,TrumpValue,TrumpValue,1,0,1,"To return the value of the trump of a card."
TrumpRank,game.functions.ints.card.CardSiteType,Constant,TrumpRank,TrumpRank,1,0,1,"To return the rank of the trump of a card."
Phases,game.functions.ints.count.CountSimpleType,Constant,Phases,Phases,1,0,1,"Number of phase changes during this trial."
Vertices,game.functions.ints.count.CountSimpleType,Constant,Vertices,Vertices,1,0,1,"Number of adjacent (connected) elements."
Edges,game.functions.ints.count.CountSimpleType,Constant,Edges,Edges,1,0,1,"Number of edges on the board."
Adjacent,game.functions.ints.count.CountSiteType,Constant,Adjacent,Adjacent,1,0,1,"Number of adjacent (connected) elements."
Neighbours,game.functions.ints.count.CountSiteType,Constant,Neighbours,Neighbours,1,0,1,"Number of neighbours (not necessarily connected)."
Orthogonal,game.functions.ints.count.CountSiteType,Constant,Orthogonal,Orthogonal,1,0,1,"Number of orthogonal elements."
Diagonal,game.functions.ints.count.CountSiteType,Constant,Diagonal,Diagonal,1,0,1,"Number of diagonal elements."
Off,game.functions.ints.count.CountSiteType,Constant,Off,Off,1,0,1,"Number of off-diagonal elements."
LevelFrom,game.functions.ints.last.LastType,Constant,LevelFrom,LevelFrom,1,0,1,"To return the ``level from''  of the last move."
LargePiece,game.functions.ints.size.SizeLargePieceType,Constant,LargePiece,LargePiece,1,0,1,""
LastFrom,game.functions.booleans.is.IsGraphType,Constant,LastFrom,LastFrom,1,0,1,"Check the graph element type of the ``from'' location of the last move."
Repeat,game.functions.booleans.is.IsRepeatType,Constant,Repeat,Repeat,1,0,1,""
CaterpillarTree,game.functions.booleans.is.IsTreeType,Constant,CaterpillarTree,CaterpillarTree,1,0,1,"To check if the induced graph (by adding or deleting edges) is the largest  caterpillar Tree or not."
Crossing,game.functions.booleans.is.IsEdgeType,Constant,Crossing,Crossing,1,0,1,""
Values,game.functions.booleans.all.AllValuesType,Constant,Values,Values,1,0,1,""
Groups,game.functions.booleans.all.AllGroupsType,Constant,Groups,Groups,1,0,1,""
Target,game.functions.graph.generators.shape.concentric.ConcentricShapeType,Constant,Target,Target,1,0,1,"Concentric circles, like a target."
Implied,game.functions.graph.generators.basis.square.DiagonalsType,Constant,Implied,Implied,1,0,1,"Diagonal connections (not edges) between opposite corners."
Concentric,game.functions.graph.generators.basis.square.DiagonalsType,Constant,Concentric,Concentric,1,0,1,"Concentric diagonal rings from the centre."
NoShape,game.functions.graph.generators.basis.square.SquareShapeType,Constant,NoShape,NoShape,1,0,1,"No shape; custom graph."
Square,game.functions.graph.generators.basis.square.SquareShapeType,Constant,Square,Square,1,0,1,"Square board shape."
Rectangle,game.functions.graph.generators.basis.square.SquareShapeType,Constant,Rectangle,Rectangle,1,0,1,"Rectangular board shape."
Limping,game.functions.graph.generators.basis.square.SquareShapeType,Constant,Limping,Limping,1,0,1,"Alternating sides are staggered."
T31212,game.functions.graph.generators.basis.tiling.TilingType,Constant,T31212,T31212,1,0,1,"Semi-regular tiling made up of triangles and dodecagons."
T488,game.functions.graph.generators.basis.tiling.TilingType,Constant,T488,T488,1,0,1,"Semi-regular tiling made up of octagons with squares in the interstitial gaps."
T33344,game.functions.graph.generators.basis.tiling.TilingType,Constant,T33344,T33344,1,0,1,"Semi-regular tiling made up of alternating rows of squares and triangles."
T4612,game.functions.graph.generators.basis.tiling.TilingType,Constant,T4612,T4612,1,0,1,"Semi-regular tiling made up of squares, hexagons and dodecagons."
T333333_33434,game.functions.graph.generators.basis.tiling.TilingType,Constant,T333333_33434,T333333_33434,1,0,1,"Tiling 3.3.3.3.3.3,3.3.4.3.4."
NoShape,game.functions.graph.generators.basis.tri.TriShapeType,Constant,NoShape,NoShape,1,0,1,"No shape; custom graph."
Square,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Square,Square,1,0,1,"Square board shape."
Rectangle,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Rectangle,Rectangle,1,0,1,"Rectangular board shape."
Diamond,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Diamond,Diamond,1,0,1,"Diamond board shape."
Triangle,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Triangle,Triangle,1,0,1,"Triangular board shape."
Star,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Star,Star,1,0,1,"Multi-pointed star shape."
Prism,game.functions.graph.generators.basis.tri.TriShapeType,Constant,Prism,Prism,1,0,1,"Diamond shape extended vertically."
NoShape,game.functions.graph.generators.basis.hex.HexShapeType,Constant,NoShape,NoShape,1,0,1,"No shape; custom graph."
Square,game.functions.graph.generators.basis.hex.HexShapeType,Constant,Square,Square,1,0,1,"Square board shape."
Square,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Square,Square,1,0,1,"Square board shape."
Rectangle,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Rectangle,Rectangle,1,0,1,"Rectangular board shape."
Diamond,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Diamond,Diamond,1,0,1,"Diamond board shape."
Prism,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Prism,Prism,1,0,1,"Prism board shape."
Spiral,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Spiral,Spiral,1,0,1,"Spiral board shape."
Limping,game.functions.graph.generators.basis.brick.BrickShapeType,Constant,Limping,Limping,1,0,1,"Alternating sides are staggered."
Random,game.functions.directions.RandomDirectionType,Constant,Random,Random,1,0,1,""
Pattern,game.functions.region.sites.SitesPatternType,Constant,Pattern,Pattern,1,0,1,""
Cell,game.functions.region.sites.SitesIndexType,Constant,Cell,Cell,1,0,1,"Vertices that make up a cell."
Edge,game.functions.region.sites.SitesIndexType,Constant,Edge,Edge,1,0,1,"End points of an edge."
Layer,game.functions.region.sites.SitesIndexType,Constant,Layer,Layer,1,0,1,"Sites in a specified layer."
Axial,game.functions.region.sites.SitesEdgeType,Constant,Axial,Axial,1,0,1,"The axials edges sites."
Horizontal,game.functions.region.sites.SitesEdgeType,Constant,Horizontal,Horizontal,1,0,1,"The horizontal edges sites."
Vertical,game.functions.region.sites.SitesEdgeType,Constant,Vertical,Vertical,1,0,1,"The vertical edges sites."
Angled,game.functions.region.sites.SitesEdgeType,Constant,Angled,Angled,1,0,1,"The angled edges sites."
Slash,game.functions.region.sites.SitesEdgeType,Constant,Slash,Slash,1,0,1,"The slash edges sites."
Slosh,game.functions.region.sites.SitesEdgeType,Constant,Slosh,Slosh,1,0,1,"The slosh edges sites."
Loop,game.functions.region.sites.SitesLoopType,Constant,Loop,Loop,1,0,1,""
Winning,game.functions.region.sites.SitesPlayerType,Constant,Winning,Winning,1,0,1,"Sites that would be winning moves for the current player."
Perimeter,game.functions.region.sites.SitesSimpleType,Constant,Perimeter,Perimeter,1,0,1,"Perimeter board sites."
ConcaveCorners,game.functions.region.sites.SitesSimpleType,Constant,ConcaveCorners,ConcaveCorners,1,0,1,"Concave corner board sites."
ConvexCorners,game.functions.region.sites.SitesSimpleType,Constant,ConvexCorners,ConvexCorners,1,0,1,"Convex corner board sites."
Major,game.functions.region.sites.SitesSimpleType,Constant,Major,Major,1,0,1,"Major generator board sites."
Minor,game.functions.region.sites.SitesSimpleType,Constant,Minor,Minor,1,0,1,"Minor generator board sites."
Hint,game.functions.region.sites.SitesSimpleType,Constant,Hint,Hint,1,0,1,"Sites that contain a puzzle hint."
LastFrom,game.functions.region.sites.SitesSimpleType,Constant,LastFrom,LastFrom,1,0,1,"The set of ``from'' sites of the last move."
Between,game.functions.region.sites.SitesMoveType,Constant,Between,Between,1,0,1,"Between-positions of a collection of moves as a set of sites."
SituationalInTurn,game.types.play.RepetitionType,Constant,SituationalInTurn,SituationalInTurn,1,0,1,"Situational State repeated within a turn."
PositionalInTurn,game.types.play.RepetitionType,Constant,PositionalInTurn,PositionalInTurn,1,0,1,"Positional State repeated within a turn."
Situational,game.types.play.RepetitionType,Constant,Situational,Situational,1,0,1,"State repeated within a game (all data in the state)."
SupportMultiple,game.types.play.PinType,Constant,SupportMultiple,SupportMultiple,1,0,1,""
StartOfTurn,game.types.play.WhenType,Constant,StartOfTurn,StartOfTurn,1,0,1,"Start of a turn."
Team3,game.types.play.RoleType,Constant,Team3,Team3,1,0,1,"Team 3 (index 3)."
Team4,game.types.play.RoleType,Constant,Team4,Team4,1,0,1,"Team 4 (index 4)."
Team5,game.types.play.RoleType,Constant,Team5,Team5,1,0,1,"Team 5 (index 5)."
Team6,game.types.play.RoleType,Constant,Team6,Team6,1,0,1,"Team 6 (index 6)."
Team7,game.types.play.RoleType,Constant,Team7,Team7,1,0,1,"Team 7 (index 7)."
Team8,game.types.play.RoleType,Constant,Team8,Team8,1,0,1,"Team 8 (index 8)."
Team9,game.types.play.RoleType,Constant,Team9,Team9,1,0,1,"Team 9 (index 9)."
Team10,game.types.play.RoleType,Constant,Team10,Team10,1,0,1,"Team 10 (index 10)."
Team11,game.types.play.RoleType,Constant,Team11,Team11,1,0,1,"Team 11 (index 11)."
Team12,game.types.play.RoleType,Constant,Team12,Team12,1,0,1,"Team 12 (index 12)."
Team13,game.types.play.RoleType,Constant,Team13,Team13,1,0,1,"Team 13 (index 13)."
Team14,game.types.play.RoleType,Constant,Team14,Team14,1,0,1,"Team 14 (index 14)."
Team15,game.types.play.RoleType,Constant,Team15,Team15,1,0,1,"Team 15 (index 15)."
Team16,game.types.play.RoleType,Constant,Team16,Team16,1,0,1,"Team 16 (index 16)."
Ally,game.types.play.RoleType,Constant,Ally,Ally,1,0,1,"Ally players."
Alternating,game.types.play.ModeType,Constant,Alternating,Alternating,1,0,1,"Players alternate making discrete moves."
Simulation,game.types.play.ModeType,Constant,Simulation,Simulation,1,0,1,"Simulation game"
Tie,game.types.play.ResultType,Constant,Tie,Tie,1,0,1,"Everybody wins."
Abandon,game.types.play.ResultType,Constant,Abandon,Abandon,1,0,1,"Game abandoned, typically for being too long."
Crash,game.types.play.ResultType,Constant,Crash,Crash,1,0,1,"Game stopped due to run-time error."
PyramidalDrop,game.types.play.GravityType,Constant,PyramidalDrop,PyramidalDrop,1,0,1,""
Draw,game.types.play.PassEndType,Constant,Draw,Draw,1,0,1,"The game in a draw."
Mover,game.types.play.PrevType,Constant,Mover,Mover,1,0,1,"The state corresponding to the previous move."
Cards,game.types.component.DealableType,Constant,Cards,Cards,1,0,1,"Card component."
Joker,game.types.component.CardType,Constant,Joker,Joker,1,0,1,"Joker rank."
Ace,game.types.component.CardType,Constant,Ace,Ace,1,0,1,"Ace rank."
Two,game.types.component.CardType,Constant,Two,Two,1,0,1,"Two rank."
Three,game.types.component.CardType,Constant,Three,Three,1,0,1,"Three rank."
Four,game.types.component.CardType,Constant,Four,Four,1,0,1,"Four rank."
Five,game.types.component.CardType,Constant,Five,Five,1,0,1,"Five rank."
Six,game.types.component.CardType,Constant,Six,Six,1,0,1,"Six rank."
Seven,game.types.component.CardType,Constant,Seven,Seven,1,0,1,"Seven rank."
Eight,game.types.component.CardType,Constant,Eight,Eight,1,0,1,"Eight rank."
Nine,game.types.component.CardType,Constant,Nine,Nine,1,0,1,"Nine rank."
Ten,game.types.component.CardType,Constant,Ten,Ten,1,0,1,"Ten rank."
Jack,game.types.component.CardType,Constant,Jack,Jack,1,0,1,"Jack rank."
Queen,game.types.component.CardType,Constant,Queen,Queen,1,0,1,"Queen rank."
King,game.types.component.CardType,Constant,King,King,1,0,1,"King rank."
NoBasis,game.types.board.BasisType,Constant,NoBasis,NoBasis,1,0,1,"No tiling; custom graph."
Triangular,game.types.board.BasisType,Constant,Triangular,Triangular,1,0,1,"Triangular tiling."
Square,game.types.board.BasisType,Constant,Square,Square,1,0,1,"Square tiling."
Hexagonal,game.types.board.BasisType,Constant,Hexagonal,Hexagonal,1,0,1,"Hexagonal tiling."
T33336,game.types.board.BasisType,Constant,T33336,T33336,1,0,1,"Semi-regular tiling made up of hexagons surrounded by triangles."
T33344,game.types.board.BasisType,Constant,T33344,T33344,1,0,1,"Semi-regular tiling made up of alternating rows of squares and triangles."
T33434,game.types.board.BasisType,Constant,T33434,T33434,1,0,1,"Semi-regular tiling made up of squares and pairs of triangles."
T3464,game.types.board.BasisType,Constant,T3464,T3464,1,0,1,"Rhombitrihexahedral tiling (e.g. Kensington)."
T3636,game.types.board.BasisType,Constant,T3636,T3636,1,0,1,"Semi-regular tiling 3.6.3.6 made up of hexagons with interstitial triangles."
T4612,game.types.board.BasisType,Constant,T4612,T4612,1,0,1,"Semi-regular tiling made up of squares, hexagons and dodecagons."
T488,game.types.board.BasisType,Constant,T488,T488,1,0,1,"Semi-regular tiling 4.8.8. made up of octagons with interstitial squares."
T31212,game.types.board.BasisType,Constant,T31212,T31212,1,0,1,"Semi-regular tiling made up of triangles and dodecagons."
T333333_33434,game.types.board.BasisType,Constant,T333333_33434,T333333_33434,1,0,1,"Tiling 3.3.3.3.3.3,3.3.4.3.4."
SquarePyramidal,game.types.board.BasisType,Constant,SquarePyramidal,SquarePyramidal,1,0,1,"Square pyramidal tiling (e.g. Shibumi)."
HexagonalPyramidal,game.types.board.BasisType,Constant,HexagonalPyramidal,HexagonalPyramidal,1,0,1,"Hexagonal pyramidal tiling."
Concentric,game.types.board.BasisType,Constant,Concentric,Concentric,1,0,1,"Concentric tiling (e.g. Morris boards, wheel boards, ...)."
Circle,game.types.board.BasisType,Constant,Circle,Circle,1,0,1,"Circular tiling (e.g. Round Merels)."
Spiral,game.types.board.BasisType,Constant,Spiral,Spiral,1,0,1,"Spiral tiling (e.g. Mehen)."
Dual,game.types.board.BasisType,Constant,Dual,Dual,1,0,1,"Tiling derived from the weak dual of a graph."
Brick,game.types.board.BasisType,Constant,Brick,Brick,1,0,1,"Brick tiling using 1x2 rectangular brick tiles."
Mesh,game.types.board.BasisType,Constant,Mesh,Mesh,1,0,1,"Mesh formed by random spread of points within an outline shape."
Morris,game.types.board.BasisType,Constant,Morris,Morris,1,0,1,"Morris tiling with concentric square rings and empty centre."
Celtic,game.types.board.BasisType,Constant,Celtic,Celtic,1,0,1,"Tiling on a square grid based on Celtic knotwork."
QuadHex,game.types.board.BasisType,Constant,QuadHex,QuadHex,1,0,1,"Quadhex board consisting of a hexagon tessellated by quadrilaterals (e.g. Three Player Chess)."
State,game.types.board.HiddenData,Constant,State,State,1,0,1,"The local state of the location is hidden."
Count,game.types.board.HiddenData,Constant,Count,Count,1,0,1,"The number of components on the location is hidden."
Rotation,game.types.board.HiddenData,Constant,Rotation,Rotation,1,0,1,"The rotation of the component on the location is hidden."
Outer,game.types.board.StoreType,Constant,Outer,Outer,1,0,1,"Outer store."
Inner,game.types.board.StoreType,Constant,Inner,Inner,1,0,1,"Inner store."
Edge,game.types.board.PuzzleElementType,Constant,Edge,Edge,1,0,1,"A variable corresponding to an edge."
CentreSite,game.types.board.LandmarkType,Constant,CentreSite,CentreSite,1,0,1,"The central site of the board."
LeftSite,game.types.board.LandmarkType,Constant,LeftSite,LeftSite,1,0,1,"The site that is furthest to the left."
RightSite,game.types.board.LandmarkType,Constant,RightSite,RightSite,1,0,1,"The site that is furthest to the right"
Topsite,game.types.board.LandmarkType,Constant,Topsite,Topsite,1,0,1,"The site that is furthest to the top."
BottomSite,game.types.board.LandmarkType,Constant,BottomSite,BottomSite,1,0,1,"The site that is furthest to the bottom."
OffDiagonal,game.types.board.RelationType,Constant,OffDiagonal,OffDiagonal,1,0,1,"Diagonal-off relation."
Layers,game.types.board.RegionTypeStatic,Constant,Layers,Layers,1,0,1,"Layers areas."
Regions,game.types.board.RegionTypeStatic,Constant,Regions,Regions,1,0,1,"Region areas."
Vertices,game.types.board.RegionTypeStatic,Constant,Vertices,Vertices,1,0,1,"Vertex areas."
AllSites,game.types.board.RegionTypeStatic,Constant,AllSites,AllSites,1,0,1,"All site areas."
Touching,game.types.board.RegionTypeStatic,Constant,Touching,Touching,1,0,1,"Touching areas."
NoShape,game.types.board.ShapeType,Constant,NoShape,NoShape,1,0,1,"No defined board shape."
Custom,game.types.board.ShapeType,Constant,Custom,Custom,1,0,1,"Custom board shape defined by the user."
Square,game.types.board.ShapeType,Constant,Square,Square,1,0,1,"Square board shape."
Rectangle,game.types.board.ShapeType,Constant,Rectangle,Rectangle,1,0,1,"Rectangular board shape."
Triangle,game.types.board.ShapeType,Constant,Triangle,Triangle,1,0,1,"Triangular board shape."
Hexagon,game.types.board.ShapeType,Constant,Hexagon,Hexagon,1,0,1,"Hexagonal board shape."
Cross,game.types.board.ShapeType,Constant,Cross,Cross,1,0,1,"Cross board shape."
Diamond,game.types.board.ShapeType,Constant,Diamond,Diamond,1,0,1,"Diamond board shape."
Prism,game.types.board.ShapeType,Constant,Prism,Prism,1,0,1,"Diamond board shape extended vertically."
Quadrilateral,game.types.board.ShapeType,Constant,Quadrilateral,Quadrilateral,1,0,1,"General quadrilateral board shape."
Rhombus,game.types.board.ShapeType,Constant,Rhombus,Rhombus,1,0,1,"Rhombus board shape."
Wheel,game.types.board.ShapeType,Constant,Wheel,Wheel,1,0,1,"Wheel board shape."
Circle,game.types.board.ShapeType,Constant,Circle,Circle,1,0,1,"Circular board shape."
Spiral,game.types.board.ShapeType,Constant,Spiral,Spiral,1,0,1,"Spiral board shape."
Wedge,game.types.board.ShapeType,Constant,Wedge,Wedge,1,0,1,"Wedge shape of height N with 1 vertex at the top and 3 vertices on the bottom, for Alquerque boards."
Star,game.types.board.ShapeType,Constant,Star,Star,1,0,1,"Multi-pointed star shape."
Limping,game.types.board.ShapeType,Constant,Limping,Limping,1,0,1,"Alternating sides are staggered."
Regular,game.types.board.ShapeType,Constant,Regular,Regular,1,0,1,"Regular polygon with sides of the same length."
Polygon,game.types.board.ShapeType,Constant,Polygon,Polygon,1,0,1,"General polygon."
Track,game.types.board.TrackType,Constant,Track,Track,1,0,1,""
NotOwn,game.types.board.RegionTypeDynamic,Constant,NotOwn,NotOwn,1,0,1,"All the sites not occupied by a piece of the mover."
NotEnemy,game.types.board.RegionTypeDynamic,Constant,NotEnemy,NotEnemy,1,0,1,"All the sites empty or occupied by a {\tt Neutral} piece."
Triangular,game.types.board.TilingBoardlessType,Constant,Triangular,Triangular,1,0,1,"Triangular tiling."
